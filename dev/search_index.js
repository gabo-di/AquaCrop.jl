var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AquaCrop","category":"page"},{"location":"#AquaCrop","page":"Home","title":"AquaCrop","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AquaCrop.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AquaCrop]","category":"page"},{"location":"#AquaCrop.AbstractParametersContainer","page":"Home","title":"AquaCrop.AbstractParametersContainer","text":"AbstractParametersContainer\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.CompartmentIndividual","page":"Home","title":"AquaCrop.CompartmentIndividual","text":"compartment = CompartmentIndividual()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.FieldCrop","page":"Home","title":"AquaCrop.FieldCrop","text":"FieldCrop\n\nHas all the data for the simulation of AquaCrop\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.FieldCrop-Tuple{String}","page":"Home","title":"AquaCrop.FieldCrop","text":"FieldCrop(inputDataDir::String)\n\nStarts the struct FieldCrop that has all the data for the simulation of AquaCrop\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ParametersContainer","page":"Home","title":"AquaCrop.ParametersContainer","text":"pc = ParametersContainer(T)\n\nContains parameters in a Dictionary of type Symbol=>T. it is used for parameters without a type in the original AquaCrop.f90\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.ProjectInputType","page":"Home","title":"AquaCrop.ProjectInputType","text":"projectinput = ProjectInputType()\n\nContainer for project file input data.\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepAssimilates","page":"Home","title":"AquaCrop.RepAssimilates","text":"assimilates = RepAssimilates()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepContent","page":"Home","title":"AquaCrop.RepContent","text":"content = RepContent()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCrop","page":"Home","title":"AquaCrop.RepCrop","text":"crop = RepCrop()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCuttings","page":"Home","title":"AquaCrop.RepCuttings","text":"cuttings = RepCuttings()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepDayEventInt","page":"Home","title":"AquaCrop.RepDayEventInt","text":"a = RepDayEventInt()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEffectStress","page":"Home","title":"AquaCrop.RepEffectStress","text":"effectstress = RepEffectStress()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEffectiveRain","page":"Home","title":"AquaCrop.RepEffectiveRain","text":"effectiverain = RepEffectiveRain()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEndSeason","page":"Home","title":"AquaCrop.RepEndSeason","text":"endseason = RepEndSeason()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepFileOK","page":"Home","title":"AquaCrop.RepFileOK","text":"fileok = RepFileOK()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIniSWC","page":"Home","title":"AquaCrop.RepIniSWC","text":"iniswc = RepIniSWC()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIrriECw","page":"Home","title":"AquaCrop.RepIrriECw","text":"irriecw = RepIrriECw()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepManag","page":"Home","title":"AquaCrop.RepManag","text":"management = RepManag()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepOnset","page":"Home","title":"AquaCrop.RepOnset","text":"onset = RepOnset()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepParam","page":"Home","title":"AquaCrop.RepParam","text":"simulparams = RepParams()\n\ncontains the simulation parameters.\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepShapes","page":"Home","title":"AquaCrop.RepShapes","text":"shape = RepShapes()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSim","page":"Home","title":"AquaCrop.RepSim","text":"simulation = RepSim()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSoil","page":"Home","title":"AquaCrop.RepSoil","text":"soil = RepSoil()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepStorage","page":"Home","title":"AquaCrop.RepStorage","text":"storage = RepStorage()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSum","page":"Home","title":"AquaCrop.RepSum","text":"summ = RepSum()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.SoilLayerIndividual","page":"Home","title":"AquaCrop.SoilLayerIndividual","text":"soillayer = SoilLayerIndividual()\n\ncreates a soil layer with a given soil class.\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.calculate_saltmobility!-Tuple{AquaCrop.SoilLayerIndividual, Any}","page":"Home","title":"AquaCrop.calculate_saltmobility!","text":"calculate_saltmobility!(soillayer::SoilLayerIndividual, saltdiffusion)\n\nsets the salt mobility\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.checkfilesinproject!-Tuple{AquaCrop.RepFileOK, Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.checkfilesinproject!","text":"checkfilesinproject!(fileok::RepFileOK, allok, input::ProjectInputType)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.checkforkeepswc-Tuple{Vector{AquaCrop.ProjectInputType}, Any, Any}","page":"Home","title":"AquaCrop.checkforkeepswc","text":"runwithkeepswc, constzrxforrun = checkforkeepswc(projectinput::Vector{ProjectInputType}, filepaths, inse)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.completecropdescription!-Tuple{AquaCrop.RepCrop, AquaCrop.RepSim, AquaCrop.RepManag}","page":"Home","title":"AquaCrop.completecropdescription!","text":"completecropdescription!(crop::RepCrop, simulation::RepSim, management::RepManag)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.completeprofiledescription!-Tuple{Vector{AquaCrop.SoilLayerIndividual}, Vector{AquaCrop.CompartmentIndividual}, AquaCrop.RepSim, AquaCrop.RepContent}","page":"Home","title":"AquaCrop.completeprofiledescription!","text":"completeprofiledescription!(soillayers::Vector{SoilLayerIndividual}, \n        compartments::Vector{CompartmentIndividual}, simulation::RepSim, totalwatercontent::RepContent)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cropstressparameterssoilfertility!-Tuple{AquaCrop.RepEffectStress, AquaCrop.RepShapes, Any}","page":"Home","title":"AquaCrop.cropstressparameterssoilfertility!","text":"cropstressparameterssoilfertility!(stressout::RepEffectStress, cropsresp::RepShapes, stresslevel)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.dailyupdate!-Tuple{AquaCrop.AbstractFieldCrop}","page":"Home","title":"AquaCrop.dailyupdate!","text":"dailyupdate!(fieldcrop::AbstractFieldCrop)\n\nUpdates the FieldCrop by one day\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.daystoreachccwithgivencgc-NTuple{5, Any}","page":"Home","title":"AquaCrop.daystoreachccwithgivencgc","text":"daystoresult = daystoreachccwithgivencgc(cctoreach, ccoval, ccxval, cgcval, l0)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.defaultfilepaths-Tuple{AbstractString}","page":"Home","title":"AquaCrop.defaultfilepaths","text":"fl = defaultfilepaths(parentdir::AbstractString)\n\nsets the default directories for the input files.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.designate_soillayer_to_compartments!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.designate_soillayer_to_compartments!","text":"designate_soillayer_to_compartments!(compartments::Vector{CompartmentIndividual}, soillayers::Vector{SoilLayerIndividual})\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinate_coeffcapillaryrise!-Tuple{AquaCrop.SoilLayerIndividual}","page":"Home","title":"AquaCrop.determinate_coeffcapillaryrise!","text":"determinate_coeffcapillaryrise!(soillayer::SoilLayerIndividual)\n\nsets the coefficients for capillary rise of soillayer considering its own data.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinate_soilclass!-Tuple{AquaCrop.SoilLayerIndividual}","page":"Home","title":"AquaCrop.determinate_soilclass!","text":"determinate_soilclass!(soillayer::SoilLayerIndividual)\n\nsets the soil class of soillayer considering its own data.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinelengthgrowthstages-NTuple{12, Any}","page":"Home","title":"AquaCrop.determinelengthgrowthstages","text":"length123, stlength, length12, cgcval = determinelengthgrowthstages(ccoval, ccxval, cdcval, l0, totallength, \n                                                                    cgcgiven, thedaystoccini, theplanting, \n                                                                    length123, stlength, length12, cgcval)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinenrandthicknesscompartments!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.determinenrandthicknesscompartments!","text":"determinenrandthicknesscompartments!(compartments::Vector{CompartmentIndividual}, soillayers::Vector{SoilLayerIndividual}, compdefthick)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.from_gravelmass_to_gravelvol-Tuple{Any, Any}","page":"Home","title":"AquaCrop.from_gravelmass_to_gravelvol","text":"gravelvol = from_gravelmass_to_gravelvol(porositypercent, gravelmasspercent)\n\ncalculates the gravel volume of soil layer.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.getparameter-Tuple{AquaCrop.ParametersContainer, Symbol}","page":"Home","title":"AquaCrop.getparameter","text":"getparameter(parameterscontainer::ParametersContainer{T}, parameterkey::Symbol)\n\ngets the  parameterkey from parameterscontainer if  parameterkey does not exist returns missing. \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.getprojecttype-Tuple{Any}","page":"Home","title":"AquaCrop.getprojecttype","text":"pt = getprojecttype(theprojectfile)\n\ngets the project type for a given file.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.getresultsparameters-Tuple{String}","page":"Home","title":"AquaCrop.getresultsparameters","text":"resultsparameters = getresultsparameters(path::String)\n\ngets all the results parameters in filepaths[:simul].\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initializeproject-NTuple{4, Any}","page":"Home","title":"AquaCrop.initializeproject","text":"inse, projectinput = initializeproject(i, theprojectfile, theprojecttype, filepaths)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initializeprojectfilename-Tuple{Any}","page":"Home","title":"AquaCrop.initializeprojectfilename","text":"projectfilenames = initializeprojectfilename(filepaths)\n\nGets all the names of the projects files.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initializeprojectinput-Tuple{Any}","page":"Home","title":"AquaCrop.initializeprojectinput","text":"projectinput = initializeprojectinput(filename)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initializesettings-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.initializesettings","text":"inse = initializesettings(usedefaultsoilfile, usedefaultcropfile, filepaths)\n\ngets the initial settings.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initializetheprogram-Tuple{Any}","page":"Home","title":"AquaCrop.initializetheprogram","text":"filepaths, resultsparameters = initializetheprogram(parentdir)\n\nGets the file paths and the simulation parameters.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ksany-NTuple{4, Any}","page":"Home","title":"AquaCrop.ksany","text":"ksval = ksany(wrel, pulactual, pllactual, shapefactor)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.lengthcanopydecline-Tuple{Any, Any}","page":"Home","title":"AquaCrop.lengthcanopydecline","text":"nd = lengthcanopydecline(ccx, cdc)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.loadprofile-Tuple{Any, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.loadprofile","text":"soil, soillayers, compartments = loadprofile(filepath, simulparam::RepParam)\n\nloads data from filepath.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.loadprofileprocessing!-Tuple{AquaCrop.RepSoil, Vector{AquaCrop.SoilLayerIndividual}, Vector{AquaCrop.CompartmentIndividual}, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.loadprofileprocessing!","text":"loadprofileprocessing!(soil::RepSoil, soillayers::Vector{SoilLayerIndividual},\n    compartments::Vector{CompartmentIndividual}, simulparam::RepParam)\n\nloads some data.\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.loadprogramparametersprojectplugin!-Tuple{AquaCrop.RepParam, Any}","page":"Home","title":"AquaCrop.loadprogramparametersprojectplugin!","text":"loadprogramparametersprojectplugin!(simulparam::RepParam, auxparfile)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.rootmaxinsoilprofile-Tuple{Any, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.rootmaxinsoilprofile","text":"zmax = rootmaxinsoilprofile(zmaxcrop, soillayers::Vector{SoilLayerIndividual})\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.setparameter!-Union{Tuple{T}, Tuple{AquaCrop.ParametersContainer{T}, Symbol, T}} where T","page":"Home","title":"AquaCrop.setparameter!","text":"setparameter!(parameterscontainer::ParametersContainer{T}, parameterkey::Symbol, parameter::T)\n\nsets an entry in parameterscontainer. \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.taufromksat-Tuple{Any}","page":"Home","title":"AquaCrop.taufromksat","text":"tau = taufromksat(ksat)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.timetoccini-NTuple{6, Any}","page":"Home","title":"AquaCrop.timetoccini","text":"elapsedtime = timetoccini(theplantingtype, thecropplantingdens, \n                      thesizeseedling, thesizeplant, thecropccx, thecropcgc)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.timetomaxcanopysf-NTuple{13, Any}","page":"Home","title":"AquaCrop.timetomaxcanopysf","text":"l12sf, redcgc, redccx, classsf = timetomaxcanopysf(cco, cgc, ccx, l0, l12, l123, ltoflor, lflor, determinantcrop, l12sf, redcgc, redccx, classsf)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.zradjustedtorestrictivelayers-Tuple{Any, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.zradjustedtorestrictivelayers","text":"zrout = zradjustedtorestrictivelayers(zrin, soillayers::Vector{SoilLayerIndividual})\n\n\n\n\n\n","category":"method"}]
}
