var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AquaCrop","category":"page"},{"location":"#AquaCrop","page":"Home","title":"AquaCrop","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AquaCrop.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AquaCrop]","category":"page"},{"location":"#AquaCrop.AbstractParametersContainer","page":"Home","title":"AquaCrop.AbstractParametersContainer","text":"AbstractParametersContainer\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.CompartmentIndividual","page":"Home","title":"AquaCrop.CompartmentIndividual","text":"compartment = CompartmentIndividual()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.FieldCrop","page":"Home","title":"AquaCrop.FieldCrop","text":"FieldCrop\n\nHas all the data for the simulation of AquaCrop\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.FieldCrop-Tuple{String}","page":"Home","title":"AquaCrop.FieldCrop","text":"FieldCrop(inputDataDir::String)\n\nStarts the struct FieldCrop that has all the data for the simulation of AquaCrop\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ParametersContainer","page":"Home","title":"AquaCrop.ParametersContainer","text":"pc = ParametersContainer(T)\n\nContains parameters in a Dictionary of type Symbol=>T. it is used for parameters without a type in the original AquaCrop.f90\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.ProjectInputType","page":"Home","title":"AquaCrop.ProjectInputType","text":"projectinput = ProjectInputType()\n\nContainer for project file input data.\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepAssimilates","page":"Home","title":"AquaCrop.RepAssimilates","text":"assimilates = RepAssimilates()\n\nset from defaultcropsoil.f90:274\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepClim","page":"Home","title":"AquaCrop.RepClim","text":"record_clim = RepClim()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepContent","page":"Home","title":"AquaCrop.RepContent","text":"content = RepContent()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCrop","page":"Home","title":"AquaCrop.RepCrop","text":"crop = RepCrop()\n\nset from  defaultcropsoil.f90:140\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCropFileSet","page":"Home","title":"AquaCrop.RepCropFileSet","text":"crop_file_set = RepCropFileSet()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCuttings","page":"Home","title":"AquaCrop.RepCuttings","text":"cuttings = RepCuttings()\n\nset from global.f90:3338\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepDayEventDbl","page":"Home","title":"AquaCrop.RepDayEventDbl","text":"a = RepDayEventDbl()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepDayEventInt","page":"Home","title":"AquaCrop.RepDayEventInt","text":"a = RepDayEventInt()\n\nset from global.f90:2838\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEffectStress","page":"Home","title":"AquaCrop.RepEffectStress","text":"effectstress = RepEffectStress()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEffectiveRain","page":"Home","title":"AquaCrop.RepEffectiveRain","text":"effectiverain = RepEffectiveRain()\n\nset from initialsettings.f90:244\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEndSeason","page":"Home","title":"AquaCrop.RepEndSeason","text":"endseason = RepEndSeason()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepFileOK","page":"Home","title":"AquaCrop.RepFileOK","text":"fileok = RepFileOK()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIniSWC","page":"Home","title":"AquaCrop.RepIniSWC","text":"iniswc = RepIniSWC()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIrriECw","page":"Home","title":"AquaCrop.RepIrriECw","text":"irriecw = RepIrriECw()\n\nset from global.f90:2838\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepManag","page":"Home","title":"AquaCrop.RepManag","text":"management = RepManag()\n\nset from global.f90:3311\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepOnset","page":"Home","title":"AquaCrop.RepOnset","text":"onset = RepOnset()\n\nset from initialsettings.f90:464\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepParam","page":"Home","title":"AquaCrop.RepParam","text":"simulparams = RepParams()\n\ncontains the simulation parameters.\n\nset from initialsettings.f90:216\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepPerennialPeriod","page":"Home","title":"AquaCrop.RepPerennialPeriod","text":"perennial_period = RepPerennialPeriod()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepShapes","page":"Home","title":"AquaCrop.RepShapes","text":"shape = RepShapes()\n\nset from defaultcropsoil.f90:175\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSim","page":"Home","title":"AquaCrop.RepSim","text":"simulation = RepSim()\n\nset from global.f90:7694\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSoil","page":"Home","title":"AquaCrop.RepSoil","text":"soil = RepSoil()\n\nset from defaultcropsoil.f90:289\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepStorage","page":"Home","title":"AquaCrop.RepStorage","text":"storage = RepStorage()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSum","page":"Home","title":"AquaCrop.RepSum","text":"summ = RepSum()\n\nset from global.f90:7153\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.SoilLayerIndividual","page":"Home","title":"AquaCrop.SoilLayerIndividual","text":"soillayer = SoilLayerIndividual()\n\ncreates a soil layer with a given soil class.\n\nset from defaultcropsoil.f90:289\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.active_cells-Tuple{AquaCrop.CompartmentIndividual, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.active_cells","text":"celi = active_cells(compartment::CompartmentIndividual, soil_layers::Vector{SoilLayerIndividual})\n\ngloba.f90:4241\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_calendar_crop!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_calendar_crop!","text":"adjust_calendar_crop!(inse)\n\ntempprocessing.f90:1467\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_calendar_days!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_calendar_days!","text":"adjust_calendar_days!(inse, iscgcgiven)\n\ntempprocessing.f90:1327\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_climrecord_to!-Tuple{AquaCrop.RepClim, Any}","page":"Home","title":"AquaCrop.adjust_climrecord_to!","text":"adjust_climrecord_to!(clim_record::RepClim, cdayn)\n\nglobal.f90:6163\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_compartments!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_compartments!","text":"adjust_compartments!(inse)\n\nrun.f90:6619\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_crop_file_parameters!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_crop_file_parameters!","text":"adjust_crop_file_parameters!(inse)\n\ntempprocessing.f90:1882\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_crop_year_to_climfile!-Tuple{AquaCrop.RepCrop, Any, Any}","page":"Home","title":"AquaCrop.adjust_crop_year_to_climfile!","text":"adjust_crop_year_to_climfile!(crop::RepCrop, clim_file, clim_record)\n\nglobal.f90:6447\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_decade_month_and_year-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.adjust_decade_month_and_year","text":"decfile, mfile, yfile = adjust_decade_month_and_year(decfile, mfile, yfile)\n\ntempprocessing.f90:293\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_month_and_year-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_month_and_year","text":"mfile, yfile = adjust_month_and_year(mfile, yfile)\n\ntempprocessing.f90:284\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_onset_search_period!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_onset_search_period!","text":"adjust_onset_search_period!(inse)\n\nglobal.f90:4214\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_simperiod!-Tuple{Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.adjust_simperiod!","text":"adjust_simperiod!(inse, projectinput::ProjectInputType)\n\nglobal.f90:4692\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_size_compartments!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_size_compartments!","text":"adjust_size_compartments!(inse, cropzx)\n\nglobal.f90:6563\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_theta_initial!-NTuple{5, Any}","page":"Home","title":"AquaCrop.adjust_theta_initial!","text":"adjust_theta_initial!(inse, prevnrcomp, prevthickcomp, prevvolprcomp, prevecdscomp)\n\nglobal.f90:5852\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_year_perennials!-Tuple{AquaCrop.RepCrop, Any}","page":"Home","title":"AquaCrop.adjust_year_perennials!","text":"adjust_year_perennials!(crop::RepCrop, theyearseason)\n\nglobal.f90:4690\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_adjusted_fc!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.calculate_adjusted_fc!","text":"calculate_adjusted_fc!(compartadj::Vector{CompartmentIndividual}, soil_layers::Vector{SoilLayerIndividual}, depthaquifer)\n\nglobal.f90:4141\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_salt_mobility!-Tuple{AquaCrop.SoilLayerIndividual, Any}","page":"Home","title":"AquaCrop.calculate_salt_mobility!","text":"calculate_salt_mobility!(soillayer::SoilLayerIndividual, saltdiffusion)\n\nsets the salt mobility\n\nglobal.f90:7500\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_files_in_project!-Tuple{AquaCrop.RepFileOK, Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.check_files_in_project!","text":"check_files_in_project!(fileok::RepFileOK, allok, input::ProjectInputType)\n\nglobal.f90:7195\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_for_keep_swc-Tuple{Vector{AquaCrop.ProjectInputType}, Any, Any}","page":"Home","title":"AquaCrop.check_for_keep_swc","text":"runwithkeepswc, constzrxforrun = checkforkeep_swc(projectinput::Vector{ProjectInputType}, filepaths, inse)\n\nglobal.f90:6643\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.complete_climate_description!-Tuple{AquaCrop.RepClim}","page":"Home","title":"AquaCrop.complete_climate_description!","text":"complete_climate_description!(record::RepClim)\n\nglobal.f90:8223\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.complete_crop_description!-Tuple{AquaCrop.RepCrop, AquaCrop.RepSim, AquaCrop.RepManag}","page":"Home","title":"AquaCrop.complete_crop_description!","text":"complete_crop_description!(crop::RepCrop, simulation::RepSim, management::RepManag)\n\nglobal.f90:5624\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.complete_profile_description!-Tuple{Vector{AquaCrop.SoilLayerIndividual}, Vector{AquaCrop.CompartmentIndividual}, AquaCrop.RepSim, AquaCrop.RepContent}","page":"Home","title":"AquaCrop.complete_profile_description!","text":"complete_profile_description!(soil_layers::Vector{SoilLayerIndividual}, \n        compartments::Vector{CompartmentIndividual}, simulation::RepSim, total_water_content::RepContent)\n\nglobal.f90:7561\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.crop_stress_parameters_soil_fertility!-Tuple{AquaCrop.RepEffectStress, AquaCrop.RepShapes, Any}","page":"Home","title":"AquaCrop.crop_stress_parameters_soil_fertility!","text":"crop_stress_parameters_soil_fertility!(stressout::RepEffectStress, cropsresp::RepShapes, stresslevel)\n\nglobal.f90:1231\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.dailyupdate!-Tuple{AquaCrop.AbstractFieldCrop}","page":"Home","title":"AquaCrop.dailyupdate!","text":"dailyupdate!(fieldcrop::AbstractFieldCrop)\n\nUpdates the FieldCrop by one day\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.days_to_reach_cc_with_given_cgc-NTuple{5, Any}","page":"Home","title":"AquaCrop.days_to_reach_cc_with_given_cgc","text":"daystoresult = days_to_reach_cc_with_given_cgc(cctoreach, ccoval, ccxval, cgcval, l0)\n\nglobal.f90:1809\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.default_filepaths-Tuple{AbstractString}","page":"Home","title":"AquaCrop.default_filepaths","text":"fl = default_filepaths(parentdir::AbstractString)\n\nsets the default directories for the input files.\n\nstartunit.f90:420\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.degrees_day-NTuple{5, Any}","page":"Home","title":"AquaCrop.degrees_day","text":"dgrd = degrees_day(tbase, tupper, tdaymin, tdaymax, gddselectedmethod)\n\nglobal.f90:2419\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.derive_smax_top_bottom-Tuple{AquaCrop.RepCrop}","page":"Home","title":"AquaCrop.derive_smax_top_bottom","text":"sxtop, sxbot = derive_smax_top_bottom(crop::RepCrop)\n\nglobal.f90:1944\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.designate_soillayer_to_compartments!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.designate_soillayer_to_compartments!","text":"designate_soillayer_to_compartments!(compartments::Vector{CompartmentIndividual}, soil_layers::Vector{SoilLayerIndividual})\n\nglobal.f90:7393\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinate_coeffcapillaryrise!-Tuple{AquaCrop.SoilLayerIndividual}","page":"Home","title":"AquaCrop.determinate_coeffcapillaryrise!","text":"determinate_coeffcapillaryrise!(soillayer::SoilLayerIndividual)\n\nsets the coefficients for capillary rise of soillayer considering its own data.\n\nglobal.f90:4034\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinate_soilclass!-Tuple{AquaCrop.SoilLayerIndividual}","page":"Home","title":"AquaCrop.determinate_soilclass!","text":"determinate_soilclass!(soillayer::SoilLayerIndividual)\n\nsets the soil class of soillayer considering its own data.\n\nglobal.f90:1909\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_date-Tuple{Any}","page":"Home","title":"AquaCrop.determine_date","text":"dayi, monthi, yeari = determine_date(dar_nr)\n\nglobal.f90:2397\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_day_nr-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.determine_day_nr","text":"day_nr = determine_day_nr(dayi, monthi, yeari)\n\nglobal.f90:2387\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_length_growth_stages-NTuple{12, Any}","page":"Home","title":"AquaCrop.determine_length_growth_stages","text":"length123, stlength, length12, cgcval = determine_length_growth_stages(ccoval, ccxval, cdcval, l0, totallength, \n                                                                    cgcgiven, thedaystoccini, theplanting, \n                                                                    length123, stlength, length12, cgcval)\n\nglobal.f90:1644\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_linked_simday1!-Tuple{AquaCrop.RepSim, AquaCrop.RepCrop, AquaCrop.RepClim, Any}","page":"Home","title":"AquaCrop.determine_linked_simday1!","text":"determine_linked_simday1!(simulation::RepSim, crop::RepCrop, clim_record::RepClim, clim_file)\n\nglobal.f90:4677\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_nrand_thickness_compartments!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.determine_nrand_thickness_compartments!","text":"determine_nrand_thickness_compartments!(compartments::Vector{CompartmentIndividual}, soil_layers::Vector{SoilLayerIndividual}, compdefthick)\n\nglobal.f90:4063\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_salt_content!-Tuple{AquaCrop.CompartmentIndividual, Vector{AquaCrop.SoilLayerIndividual}, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.determine_salt_content!","text":"determine_salt_content!(compartment::CompartmentIndividual, soil_layers::Vector{SoilLayerIndividual}, simulparam::RepParam)\n\nglobal.f90:4258\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ececomp-Tuple{AquaCrop.CompartmentIndividual, Any}","page":"Home","title":"AquaCrop.ececomp","text":"ece = ececomp(compartment::CompartmentIndividual, inse)\n\nglobal.f90:2523\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.find_values-NTuple{7, Any}","page":"Home","title":"AquaCrop.find_values","text":"zcn, ecdsm = find_values(atdaynr, daynr1, daynr2, z1, ec1, z2, ec2)\n\nglobal.f90:6140\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.from_gravelmass_to_gravelvol-Tuple{Any, Any}","page":"Home","title":"AquaCrop.from_gravelmass_to_gravelvol","text":"gravelvol = from_gravelmass_to_gravelvol(porositypercent, gravelmasspercent)\n\ncalculates the gravel volume of soil layer.\n\nglobal.f90:1521\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.full_undefined_record-Tuple{AquaCrop.RepClim}","page":"Home","title":"AquaCrop.full_undefined_record","text":"logi = full_undefined_record(record::RepClim)\n\nglobal.f90:2826\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.gddcdc_to_cdc-NTuple{11, Any}","page":"Home","title":"AquaCrop.gddcdc_to_cdc","text":"cdc = gddcdc_to_cdc(plantdaynr, d123, gddl123, gddharvest, ccx, gddcdc, tbase, tupper, notempfiletmin, notempfiletmax, inse)\n\ntempprocessing.f90:1545\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_decade_temperature_dataset!-Tuple{Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_decade_temperature_dataset!","text":"get_decade_temperature_dataset!(tmin_dataset, tmax_dataset, daynri, temperature_file, temperature_record::RepClim)\n\ntempprocessing.f90:362\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_interpolation_parameters-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_interpolation_parameters","text":" aover3, bover2, c = get_interpolation_parameters(c1, c2, c3)\n\ntempprocessing.f90:854\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_monthly_temperature_dataset!-Tuple{Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_monthly_temperature_dataset!","text":"get_monthly_temperature_dataset!(tmin_dataset, tmax_dataset, daynri, temperature_file, temperature_record::RepClim)\n\ntempprocessing.f90:596\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_parameters-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_parameters","text":"ul, ll, mid = get_parameters(c1, c2, c3)\n\ntempprocessing.f90:580\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_project_type-Tuple{Any}","page":"Home","title":"AquaCrop.get_project_type","text":"pt = get_project_type(theprojectfile)\n\ngets the project type for a given file.\n\nstartunit.f90:322\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_results_parameters-Tuple{String}","page":"Home","title":"AquaCrop.get_results_parameters","text":"resultsparameters = get_results_parameters(path::String)\n\ngets all the results parameters in filepaths[:simul].\n\nstartunit.f90:426\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three-Tuple{Any, Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_set_of_three","text":"c1min, c1max, c2min, c2max, c3min, c3max = get_set_of_three(dayn, deci, monthi, yeari, temperature_file, temperature_record::RepClim)\n\ntempprocessing.f90:439\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three_months-Tuple{Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_set_of_three_months","text":"c1min, c2min, c3min, c1max, c2max, c3max, x1, x2, x3, t1 = get_set_of_three_months(monthi, yeari, temperature_file, temperature_record::RepClim)\n\ntempprocessing.f90:645\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.getparameter-Tuple{AquaCrop.ParametersContainer, Symbol}","page":"Home","title":"AquaCrop.getparameter","text":"getparameter(parameterscontainer::ParametersContainer{T}, parameterkey::Symbol)\n\ngets the  parameterkey from parameterscontainer if  parameterkey does not exist returns missing. \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.growing_degree_days-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.growing_degree_days","text":"gdd1234 = growing_degree_days(inse, tdaymin, tdaymax)\n\ntempprocessing.f90:871\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_project-NTuple{4, Any}","page":"Home","title":"AquaCrop.initialize_project","text":"inse, projectinput, fileok = initialize_project(i, theprojectfile, theprojecttype, filepaths)\n\nstartunit.f90:535\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_project_filename-Tuple{Any}","page":"Home","title":"AquaCrop.initialize_project_filename","text":"project_filenames = initialize_project_filename(filepaths)\n\nGets all the names of the projects files.\n\nstartunit.f90:441\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_project_input-Tuple{Any, Any}","page":"Home","title":"AquaCrop.initialize_project_input","text":"projectinput = initialize_project_input(filename, parentdir)\n\nproject_input.f90:152\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_run_part_1!-Tuple{Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.initialize_run_part_1!","text":"initialize_run_part_1!(inse, projectinput::ProjectInputType)\n\nrun.f90:6590\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_settings-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.initialize_settings","text":"inse = initialize_settings(usedefaultsoilfile, usedefaultcropfile, filepaths)\n\ngets the initial settings.\n\ninitialsettings.f90:201\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_the_program-Tuple{Any}","page":"Home","title":"AquaCrop.initialize_the_program","text":"filepaths, resultsparameters = initialize_the_program(parentdir)\n\nGets the file paths and the simulation parameters.\n\nstartunit.f90:417\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.isleapyear-Tuple{Any}","page":"Home","title":"AquaCrop.isleapyear","text":"leapyear = isleapyear(year)\n\nglobal.f90:7100\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ks_any-NTuple{4, Any}","page":"Home","title":"AquaCrop.ks_any","text":"ksval = ks_any(wrel, pulactual, pllactual, shapefactor)\n\nglobal.f90:2611\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.length_canopy_decline-Tuple{Any, Any}","page":"Home","title":"AquaCrop.length_canopy_decline","text":"nd = length_canopy_decline(ccx, cdc)\n\nglobal.f90:1839\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_clim!-Tuple{AquaCrop.RepClim, Any}","page":"Home","title":"AquaCrop.load_clim!","text":"load_clim!(record::RepClim, filename)\n\nglobal.f90:5936\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_crop!-Tuple{AquaCrop.RepCrop, AquaCrop.RepPerennialPeriod, Any}","page":"Home","title":"AquaCrop.load_crop!","text":"load_crop!(crop::RepCrop, perennial_period::RepPerennialPeriod, crop_file)\n\nglobal.f90:4799\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_groundwater!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_groundwater!","text":"load_groundwater!(inse, fullname)\n\nglobal.f90:5981\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_initial_conditions!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_initial_conditions!","text":" load_initial_conditions!(inse, swcinifilefull)\n\nglobal.f90:6486\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_irri_schedule_info!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_irri_schedule_info!","text":"load_irri_schedule_info!(inse, fullname)\n\nglobal.f90:2860\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_management!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_management!","text":"load_management!(inse, fullname)\n\nglobal.f90:3350\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_offseason!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_offseason!","text":"load_offseason!(inse, fullname)\n\nglobal.f90:5769\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_profile-Tuple{Any, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.load_profile","text":"soil, soil_layers, compartments = load_profile(filepath, simulparam::RepParam)\n\nloads data from filepath.\n\nglobal.f90:7590\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_profile_processing!-Tuple{AquaCrop.RepSoil, Vector{AquaCrop.SoilLayerIndividual}, Vector{AquaCrop.CompartmentIndividual}, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.load_profile_processing!","text":"load_profile_processing!(soil::RepSoil, soil_layers::Vector{SoilLayerIndividual},\n    compartments::Vector{CompartmentIndividual}, simulparam::RepParam)\n\nloads some data.\n\nglobal.f90:7684\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_program_parameters_project_plugin!-Tuple{AquaCrop.RepParam, Any}","page":"Home","title":"AquaCrop.load_program_parameters_project_plugin!","text":"load_program_parameters_project_plugin!(simulparam::RepParam, auxparfile)\n\nstartunit.f90:767\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_simulation_project!-Tuple{Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.load_simulation_project!","text":"load_simulation_project!(inse, projectinput::ProjectInputType)\n\ntempprocessing.f90:1932\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.no_adjustment-Tuple{Any}","page":"Home","title":"AquaCrop.no_adjustment","text":"nadj = no_adjustment(fcvolpr)\n\nglobal.f90:4195\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.no_irrigation!-Tuple{Any}","page":"Home","title":"AquaCrop.no_irrigation!","text":"no_irrigation!(inse)\n\nglobal.f90:2838\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_month-Tuple{Any}","page":"Home","title":"AquaCrop.read_month","text":"cimin, cimax = read_month(stringline)\n\ntempprocessing.f90:837\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_temperature_file!-Union{Tuple{T}, Tuple{AquaCrop.ParametersContainer{T}, Any}} where T","page":"Home","title":"AquaCrop.read_temperature_file!","text":"read_temperature_file!(array_parameters::ParametersContainer{T}, temperature_file) where T\n\ntempprocessing.f90:307\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.reset_previous_sum!-Tuple{Any}","page":"Home","title":"AquaCrop.reset_previous_sum!","text":"reset_previous_sum!(inse)\n\nrun.f90:3445\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.reset_swc_to_fc!-Tuple{AquaCrop.RepSim, Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.reset_swc_to_fc!","text":"reset_swc_to_fc!(simulation::RepSim, compartments::Vector{CompartmentIndividual},\n                 soil_layers::Vector{SoilLayerIndividual}, ziaqua)\n\nglobal.f90:4758\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.root_max_in_soil_profile-Tuple{Any, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.root_max_in_soil_profile","text":"zmax = root_max_in_soil_profile(zmaxcrop, soil_layers::Vector{SoilLayerIndividual})\n\nglobal.f90:1092\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.run_simulation!-Tuple{Any, Vector{AquaCrop.ProjectInputType}}","page":"Home","title":"AquaCrop.run_simulation!","text":"run_simulation!(inse, projectinput::Vector{ProjectInputType})\n\nrun.f90:7779\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.salt_solution_deposit!-Tuple{AquaCrop.CompartmentIndividual, AquaCrop.RepParam, Any, Any}","page":"Home","title":"AquaCrop.salt_solution_deposit!","text":"salt_solution_deposit!(compartment::CompartmentIndividual, simulparam::RepParam, i, mm)\n\nglobal.f90:2572\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_clim_data!-Tuple{Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.set_clim_data!","text":"set_clim_data!(inse, projectinput::ProjectInputType)\n\nglobal.f90:4295\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_daynr_to_yundef-Tuple{Any}","page":"Home","title":"AquaCrop.set_daynr_to_yundef","text":"daynri = set_daynr_to_yundef(daynri)\n\ntempprocessing.f90:351\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.setparameter!-Union{Tuple{T}, Tuple{AquaCrop.ParametersContainer{T}, Symbol, T}} where T","page":"Home","title":"AquaCrop.setparameter!","text":"setparameter!(parameterscontainer::ParametersContainer{T}, parameterkey::Symbol, parameter::T)\n\nsets an entry in parameterscontainer. \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.start_the_program","page":"Home","title":"AquaCrop.start_the_program","text":"start_the_program(dir::Union{String,Nothing}=nothing)\n\nstarts the program\n\nstartunit.f90:931\n\n\n\n\n\n","category":"function"},{"location":"#AquaCrop.sum_calendar_days-NTuple{7, Any}","page":"Home","title":"AquaCrop.sum_calendar_days","text":"nrcdays = sum_calendar_days(valgddays, firstdaycrop, tbase, tupper, tdaymin, tdaymax, inse)\n\ntempprocessing.f90:1035\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.tau_from_ksat-Tuple{Any}","page":"Home","title":"AquaCrop.tau_from_ksat","text":"tau = tau_from_ksat(ksat)\n\nglobal.f90:1889\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.time_to_cc_ini-NTuple{6, Any}","page":"Home","title":"AquaCrop.time_to_cc_ini","text":"elapsedtime = time_to_cc_ini(theplantingtype, thecropplantingdens, \n                      thesizeseedling, thesizeplant, thecropccx, thecropcgc)\n\nglobal.f90:1754\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.time_to_max_canopy_sf-NTuple{13, Any}","page":"Home","title":"AquaCrop.time_to_max_canopy_sf","text":"l12sf, redcgc, redccx, classsf = time_to_max_canopy_sf(cco, cgc, ccx, l0, l12, l123, ltoflor, lflor, determinantcrop, l12sf, redcgc, redccx, classsf)\n\nglobal.f90:2090\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.translate_inilayers_to_swprofile!-NTuple{5, Any}","page":"Home","title":"AquaCrop.translate_inilayers_to_swprofile!","text":"translate_inilayers_to_swprofile!(inse, nrlay, laythickness, layvolpr, layecds)\n\nglobal.f90:6179\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.translate_inipoints_to_swprofile!-NTuple{5, Any}","page":"Home","title":"AquaCrop.translate_inipoints_to_swprofile!","text":"translate_inipoints_to_swprofile!(inse, nrloc, locdepth, locvolpr, locecds)\n\nglobal.f90:6258\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.zr_adjusted_to_restrictive_layers-Tuple{Any, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.zr_adjusted_to_restrictive_layers","text":"zrout = zr_adjusted_to_restrictive_layers(zrin, soil_layers::Vector{SoilLayerIndividual})\n\nglobal.f90:1126\n\n\n\n\n\n","category":"method"}]
}
