var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AquaCrop","category":"page"},{"location":"#AquaCrop","page":"Home","title":"AquaCrop","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AquaCrop.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AquaCrop]","category":"page"},{"location":"#AquaCrop.ton","page":"Home","title":"AquaCrop.ton","text":"ton\n\nmetric tonelad 1 ton = 1000 kg Dimension: 𝐌\n\n\n\n\n\n","category":"constant"},{"location":"#AquaCrop.AbstractParametersContainer","page":"Home","title":"AquaCrop.AbstractParametersContainer","text":"AbstractParametersContainer\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.AllOk","page":"Home","title":"AquaCrop.AllOk","text":"all_ok = AllOk(logi::Bool, msg::String)\n\nhas information if the simulation is going well\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.AquaCropField","page":"Home","title":"AquaCrop.AquaCropField","text":"FieldAquaCrop\n\nHas all the data for the simulation of AquaCrop\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.CompartmentIndividual","page":"Home","title":"AquaCrop.CompartmentIndividual","text":"compartment = CompartmentIndividual()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.ParametersContainer","page":"Home","title":"AquaCrop.ParametersContainer","text":"pc = ParametersContainer(T)\n\nContains parameters in a Dictionary of type Symbol=>T. it is used for parameters without a type in the original AquaCrop.f90\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.ProjectInputType","page":"Home","title":"AquaCrop.ProjectInputType","text":"projectinput = ProjectInputType()\n\nContainer for project file input data.\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepAssimilates","page":"Home","title":"AquaCrop.RepAssimilates","text":"assimilates = RepAssimilates()\n\nset from defaultcropsoil.f90:274\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepClim","page":"Home","title":"AquaCrop.RepClim","text":"record_clim = RepClim()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepContent","page":"Home","title":"AquaCrop.RepContent","text":"content = RepContent()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCrop","page":"Home","title":"AquaCrop.RepCrop","text":"crop = RepCrop()\n\nset from  defaultcropsoil.f90:140\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCropFileSet","page":"Home","title":"AquaCrop.RepCropFileSet","text":"crop_file_set = RepCropFileSet()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCutInfoRecord","page":"Home","title":"AquaCrop.RepCutInfoRecord","text":"cut_info = RepCutInfoRecord()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepCuttings","page":"Home","title":"AquaCrop.RepCuttings","text":"cuttings = RepCuttings()\n\nset from global.f90:3338\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepDayEventDbl","page":"Home","title":"AquaCrop.RepDayEventDbl","text":"a = RepDayEventDbl()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepDayEventInt","page":"Home","title":"AquaCrop.RepDayEventInt","text":"a = RepDayEventInt()\n\nset from global.f90:2838\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEffectStress","page":"Home","title":"AquaCrop.RepEffectStress","text":"effectstress = RepEffectStress()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEffectiveRain","page":"Home","title":"AquaCrop.RepEffectiveRain","text":"effectiverain = RepEffectiveRain()\n\nset from initialsettings.f90:244\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepEndSeason","page":"Home","title":"AquaCrop.RepEndSeason","text":"endseason = RepEndSeason()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepFileOK","page":"Home","title":"AquaCrop.RepFileOK","text":"fileok = RepFileOK()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepGwTable","page":"Home","title":"AquaCrop.RepGwTable","text":"gwtable = RepGwTable()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIniSWC","page":"Home","title":"AquaCrop.RepIniSWC","text":"iniswc = RepIniSWC()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIrriECw","page":"Home","title":"AquaCrop.RepIrriECw","text":"irriecw = RepIrriECw()\n\nset from global.f90:2838\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepIrriInfoRecord","page":"Home","title":"AquaCrop.RepIrriInfoRecord","text":"irri_info = RepIrriInfoRecord()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepManag","page":"Home","title":"AquaCrop.RepManag","text":"management = RepManag()\n\nset from global.f90:3311\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepOnset","page":"Home","title":"AquaCrop.RepOnset","text":"onset = RepOnset()\n\nset from initialsettings.f90:464\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepParam","page":"Home","title":"AquaCrop.RepParam","text":"simulparams = RepParams()\n\ncontains the simulation parameters.\n\nset from initialsettings.f90:216\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepPerennialPeriod","page":"Home","title":"AquaCrop.RepPerennialPeriod","text":"perennial_period = RepPerennialPeriod()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepPlotPar","page":"Home","title":"AquaCrop.RepPlotPar","text":"plotvarcorp = RepPlotPar()\n\nwe set these values since we need them for rootunit.f90:37 AdjustedRootingDepth\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepRootZoneSalt","page":"Home","title":"AquaCrop.RepRootZoneSalt","text":"root_zone_salt = RepRootZoneSalt()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepRootZoneWC","page":"Home","title":"AquaCrop.RepRootZoneWC","text":"root_zone_wc = RepRootZoneWC()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepShapes","page":"Home","title":"AquaCrop.RepShapes","text":"shape = RepShapes()\n\nset from defaultcropsoil.f90:175\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSim","page":"Home","title":"AquaCrop.RepSim","text":"simulation = RepSim()\n\nset from global.f90:7694\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSoil","page":"Home","title":"AquaCrop.RepSoil","text":"soil = RepSoil()\n\nset from defaultcropsoil.f90:289\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepStorage","page":"Home","title":"AquaCrop.RepStorage","text":"storage = RepStorage()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepStressTot","page":"Home","title":"AquaCrop.RepStressTot","text":"stresstot = RepStressTot()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepSum","page":"Home","title":"AquaCrop.RepSum","text":"summ = RepSum()\n\nset from global.f90:7153\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.RepTransfer","page":"Home","title":"AquaCrop.RepTransfer","text":"transfer = RepTransfer()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.SoilLayerIndividual","page":"Home","title":"AquaCrop.SoilLayerIndividual","text":"soillayer = SoilLayerIndividual()\n\ncreates a soil layer with a given soil class.\n\nset from defaultcropsoil.f90:289\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.StressIndexesBio","page":"Home","title":"AquaCrop.StressIndexesBio","text":"stress_indexes = StressIndexesBio()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.StressIndexesSalt","page":"Home","title":"AquaCrop.StressIndexesSalt","text":"stress_indexes = StressIndexesSalt()\n\n\n\n\n\n","category":"type"},{"location":"#AquaCrop.active_cells-Tuple{AquaCrop.CompartmentIndividual, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.active_cells","text":"celi = active_cells(compartment::CompartmentIndividual, soil_layers::Vector{SoilLayerIndividual})\n\ngloba.f90:4241\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.actual_rooting_depth-NTuple{12, Any}","page":"Home","title":"AquaCrop.actual_rooting_depth","text":"zr = actual_rooting_depth(dap, l0, lzmax, l1234, gddl0, gddlzmax, \n                          sumgdd, zmin, zmax, shapefactor, typedays, gvars)\n\nglobal.f90:7262 must set simulation.SCor = 1  before calling this function \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.actual_rooting_depth_days-NTuple{8, Any}","page":"Home","title":"AquaCrop.actual_rooting_depth_days","text":"ardd = actual_rooting_depth_days(dap, l0, lzmax, l1234, zmin, zmax, shapefactor, gvars)\n\nglobal.f90:7306\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.actual_rooting_depth_gddays-NTuple{9, Any}","page":"Home","title":"AquaCrop.actual_rooting_depth_gddays","text":"ardg = actual_rooting_depth_gddays(dap, l1234, gddl0, gddlzmax, sumgdd, zmin, zmax, shapefactor, gvars)\n\nglobal.f90:7346\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.actualize_with_dict!-Union{Tuple{T}, Tuple{T, AbstractDict}} where T<:AquaCrop.AbstractParametersContainer","page":"Home","title":"AquaCrop.actualize_with_dict!","text":"actualize_with_dict!(obj::T, aux::AbstractDict) where T<:AbstractParametersContainer\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_dayout!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.add_output_in_dayout!","text":"add_output_in_dayout(outputs, arr)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_etodatasim!-Union{Tuple{T}, Tuple{Any, T}} where T<:Number","page":"Home","title":"AquaCrop.add_output_in_etodatasim!","text":"add_output_in_etodatasim!(outputs, eto::T) where T<:Number\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_evaldataout!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.add_output_in_evaldataout!","text":"add_output_in_evaldataout!(outputs, arr)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_harvestsout!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.add_output_in_harvestsout!","text":"add_output_in_harvestsout!(outputs, arr)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_logger!-Tuple{Any, String}","page":"Home","title":"AquaCrop.add_output_in_logger!","text":"add_output_in_logger!(outputs, aux::String)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_raindatasim!-Union{Tuple{T}, Tuple{Any, T}} where T<:Number","page":"Home","title":"AquaCrop.add_output_in_raindatasim!","text":"add_output_in_raindatasim!(outputs, rain::T) where T<:Number\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_seasonout!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.add_output_in_seasonout!","text":"add_output_in_seasonout!(outputs, arr)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_tcropsim!-Union{Tuple{T}, Tuple{Any, T, T}} where T<:Number","page":"Home","title":"AquaCrop.add_output_in_tcropsim!","text":"add_output_in_tcropsim!(outputs, tlow::T, thigh::T) where T<:Number\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.add_output_in_tempdatasim!-Union{Tuple{T}, Tuple{Any, T, T}} where T<:Number","page":"Home","title":"AquaCrop.add_output_in_tempdatasim!","text":"add_output_in_tempdatasim!(outputs, tlow::T, thigh::T) where T<:Number\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_calendar_crop!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_calendar_crop!","text":"adjust_calendar_crop!(gvars)\n\ntempprocessing.f90:1467\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_calendar_days!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_calendar_days!","text":"adjust_calendar_days!(gvars, iscgcgiven)\n\ntempprocessing.f90:1327\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_climrecord_to!-Tuple{AquaCrop.RepClim, Any}","page":"Home","title":"AquaCrop.adjust_climrecord_to!","text":"adjust_climrecord_to!(clim_record::RepClim, cdayn)\n\nglobal.f90:6163\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_compartments!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_compartments!","text":"adjust_compartments!(gvars)\n\nrun.f90:6619\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_crop_file_parameters!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_crop_file_parameters!","text":"adjust_crop_file_parameters!(gvars)\n\ntempprocessing.f90:1882\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_crop_year_to_climfile!-Tuple{AquaCrop.RepCrop, Any, Any}","page":"Home","title":"AquaCrop.adjust_crop_year_to_climfile!","text":"adjust_crop_year_to_climfile!(crop::RepCrop, clim_file, clim_record)\n\nglobal.f90:6447\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_decade_month_and_year-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.adjust_decade_month_and_year","text":"decfile, mfile, yfile = adjust_decade_month_and_year(decfile, mfile, yfile)\n\ntempprocessing.f90:293\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_epot_mulch_wetted_surface!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_epot_mulch_wetted_surface!","text":"adjust_epot_mulch_wetted_surface!(gvars)\n\nsimul.f90:4260\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_for_watertable!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_for_watertable!","text":"adjust_for_watertable!(gvars)\n\nrun.f90:3423\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_month-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_month","text":"cimin, cimax = adjust_month(tlow, thigh)\n\nthis comes from read_month tempprocessing.f90:837\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_month_and_year-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_month_and_year","text":"mfile, yfile = adjust_month_and_year(mfile, yfile)\n\ntempprocessing.f90:284\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_onset_search_period!-Tuple{Any}","page":"Home","title":"AquaCrop.adjust_onset_search_period!","text":"adjust_onset_search_period!(gvars)\n\nglobal.f90:4214\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_pleaf_to_eto-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.adjust_pleaf_to_eto","text":"pleafulact, pleafllact = adjust_pleaf_to_eto(etomean, crop, simulparam)\n\nsimul.f90:424\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_psenescence_to_eto-NTuple{5, Any}","page":"Home","title":"AquaCrop.adjust_psenescence_to_eto","text":"psenact = adjust_psenescence_to_eto(etomean, timesenescence, withbeta, crop, simulparam)\n\nsimul.f90:1106\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_pstomatal_to_eto-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.adjust_pstomatal_to_eto","text":"pstomatulact = adjust_pstomatal_to_eto(meaneto, crop, simulparam)\n\nsimul.f90:1084\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_simperiod!-Tuple{Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.adjust_simperiod!","text":"adjust_simperiod!(gvars, projectinput::ProjectInputType)\n\nglobal.f90:4692\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_size_compartments!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_size_compartments!","text":"adjust_size_compartments!(gvars, cropzx)\n\nglobal.f90:6563\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_swc_rootzone!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.adjust_swc_rootzone!","text":"adjust_swc_rootzone!(gvars, lvars)\n\nrun.f90:6348\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_theta_initial!-NTuple{5, Any}","page":"Home","title":"AquaCrop.adjust_theta_initial!","text":"adjust_theta_initial!(gvars, prevnrcomp, prevthickcomp, prevvolprcomp, prevecdscomp)\n\nglobal.f90:5852\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjust_year_perennials!-Tuple{AquaCrop.RepCrop, Any}","page":"Home","title":"AquaCrop.adjust_year_perennials!","text":"adjust_year_perennials!(crop::RepCrop, theyearseason)\n\nglobal.f90:4690\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjusted_ks_sto_to_ecsw-NTuple{12, Any}","page":"Home","title":"AquaCrop.adjusted_ks_sto_to_ecsw","text":"ksstoout = adjusted_ks_sto_to_ecsw(ecemin, ecemax, responseecsw, ecei, \n        ecswi, ecswfci, wrel, coeffb0salt, coeffb1salt, coeffb2salt, ksstoin, simulation)\n\nglobal.f90:2321\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.adjusted_rooting_depth!-Tuple{Any}","page":"Home","title":"AquaCrop.adjusted_rooting_depth!","text":"adjusted_rooting_depth!(gvars)\n\nrootunit.f90:37\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.advance_one_time_step!-NTuple{5, Any}","page":"Home","title":"AquaCrop.advance_one_time_step!","text":"advance_one_time_step!(outputs, gvars, lvars, parentdir, nrrun)\n\nrun.f90:6747\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.biomass-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.biomass","text":"biomass = biomass(cropfield::AquaCropField)\n\nbiomass in ton/ha\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.bm_range-Tuple{Any}","page":"Home","title":"AquaCrop.bm_range","text":"bmr = bm_range(hiadj)\n\nglobal.f90:2278\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.bnormalized-NTuple{50, Any}","page":"Home","title":"AquaCrop.bnormalized","text":"sumbnor = bnormalized(outputs, thedaystoccini, thegddaystoccini,\n        l0, l12, l12sf, l123, l1234, lflor, \n        gddl0, gddl12, gddl12sf, gddl123, gddl1234, \n        wpyield, daysyieldformation, tswitch, cco, ccx, \n        cgc, gddcgc, cdc, gddcdc, kctop, kcdeclageing, \n        cceffectprocent, wpbio, theco2, tbase, tupper, \n        tdaymin, tdaymax, gdtransplow, ratdgdd, sumkctop, \n        stressinpercent, strresredcgc, strresredccx, strresredwp, \n        strresredkssto, weedstress, deltaweedstress, strrescdecline, \n        shapefweed, themodecycle, fertilitystresson,\n        simulation, simulparam, management, crop)\n\ntempprocessing.f90:2586 note that we must do simulation.DelayedDays = 0 before calling this function\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.budget_module!-NTuple{4, Any}","page":"Home","title":"AquaCrop.budget_module!","text":"budget_module!(gvars, lvars, virtualtimecc, sumgddadjcc)\n\nsimul.f90:5417\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_adjusted_fc!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.calculate_adjusted_fc!","text":"calculate_adjusted_fc!(compartadj::Vector{CompartmentIndividual}, soil_layers::Vector{SoilLayerIndividual}, depthaquifer)\n\nglobal.f90:4141\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_capillary_rise!-Tuple{Any}","page":"Home","title":"AquaCrop.calculate_capillary_rise!","text":"calculate_capillary_rise!(gvars)\n\nsimul.f90:2060\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_delta_theta-NTuple{4, Any}","page":"Home","title":"AquaCrop.calculate_delta_theta","text":"deltax = calculate_delta_theta(theta_in, thetaadjfc, nrlayer, soil_layers)\n\nsimul.f90:1570\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_drainage!-Tuple{Any}","page":"Home","title":"AquaCrop.calculate_drainage!","text":"calculate_drainage!(gvars)\n\nsimul.f90:1627\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_effective_rainfall!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.calculate_effective_rainfall!","text":"calculate_effective_rainfall!(gvars, lvars)\n\nsimul.f90:1986\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_etpot-NTuple{18, Any}","page":"Home","title":"AquaCrop.calculate_etpot","text":"tpotval, epotval = calculate_etpot(dap, l0, l12, l123, lharvest, daylastcut, cci,                            etoval, kcval, kcdeclineval, ccx, ccxwithered,                            cceffectprocent, co2i, gddayi, tempgdtransplow,                            simulation, simulparam)\n\nglobal.f90:7888\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_evaporation_surface_water!-Tuple{Any}","page":"Home","title":"AquaCrop.calculate_evaporation_surface_water!","text":"calculate_evaporation_surface_water!(gvars)\n\nsimul.f90:4236\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_extra_runoff!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.calculate_extra_runoff!","text":"calculate_extra_runoff!(gvars, lvars)\n\nsimul.f90:2720\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_factor-NTuple{4, Any}","page":"Home","title":"AquaCrop.calculate_factor","text":"cf = calculate_factor(layeri, compi, soil_layers, compartments)\n\nsimu.f90:3212\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_infiltration!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.calculate_infiltration!","text":"calculate_infiltration!(gvars, lvars)\n\nsimul.f90:2820\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_irrigation!-NTuple{4, Any}","page":"Home","title":"AquaCrop.calculate_irrigation!","text":"calculate_irrigation!(gvars, lvars, targettimeval, targetdepthval)\n\nsimul.f90:1940\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_relative_wetness_topsoil-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.calculate_relative_wetness_topsoil","text":"sumi = calculate_relative_wetness_topsoil(maxdepth, compartments, soil_layers)\n\nsimul.f90:1901\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_rootfraction_compartment!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.calculate_rootfraction_compartment!","text":"calculate_rootfraction_compartment!(compartments, rootingdepth)\n\nsimul.f90:1375\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_runoff!-Tuple{Any}","page":"Home","title":"AquaCrop.calculate_runoff!","text":"calculate_runoff!(gvars)\n\nsimul.f90:1852\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_salt_content!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.calculate_salt_content!","text":"calculate_salt_content!(gvars, lvars, dayi)\n\nsimul.f90:2329\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_salt_mobility!-Tuple{AquaCrop.SoilLayerIndividual, Any}","page":"Home","title":"AquaCrop.calculate_salt_mobility!","text":"calculate_salt_mobility!(soillayer::SoilLayerIndividual, saltdiffusion)\n\nsets the salt mobility\n\nglobal.f90:7500\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_sink_values!-NTuple{5, Any}","page":"Home","title":"AquaCrop.calculate_sink_values!","text":"calculate_sink_values!(compartments, rootingdepth, irrimode, crop, simulation)\n\nsimul.f90:1407\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_soil_evaporation_stage1!-Tuple{Any}","page":"Home","title":"AquaCrop.calculate_soil_evaporation_stage1!","text":"calculate_soil_evaporation_stage1!(gvars)\n\nsimul.f90:4439\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_soil_evaporation_stage2!-Tuple{Any}","page":"Home","title":"AquaCrop.calculate_soil_evaporation_stage2!","text":"calculate_soil_evaporation_stage2!(gvars)\n\nsimul.f90:4458\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_surfacestorage!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.calculate_surfacestorage!","text":"calculate_surfacestorage!(gvars, lvars, dayi)\n\nsimul.f90:2756\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_theta-NTuple{4, Any}","page":"Home","title":"AquaCrop.calculate_theta","text":"thetax = calculate_theta(delta_theta, thetaadjfc, nrlayer, soil_layers)\n\nsimul.f90:1598\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_theta_critical-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.calculate_theta_critical","text":"theta = calculate_theta_critical(layeri, soil_layers, crop)\n\nsimul.f90:1362\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_transpiration!-NTuple{5, Any}","page":"Home","title":"AquaCrop.calculate_transpiration!","text":"calculate_transpiration!(gvars, tpot, coeffb0salt, coeffb1salt, coeffb2salt)\n\nsimul.f90:1156\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.calculate_weighting_factors!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.calculate_weighting_factors!","text":"calculate_weighting_factors!(depth, compartments)\n\nsimul.f90:1819\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.canopy_cover_no_stress_days_sf-NTuple{11, Any}","page":"Home","title":"AquaCrop.canopy_cover_no_stress_days_sf","text":"cc = canopy_cover_no_stress_days_sf(dap, l0, l123,\n   lmaturity, cco, ccx, cgc, cdc, sfredcgc, sfredccx, simulation)\n\nglobal.f90:1333\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.canopy_cover_no_stress_gddays_sf-NTuple{10, Any}","page":"Home","title":"AquaCrop.canopy_cover_no_stress_gddays_sf","text":"cc = canopy_cover_no_stress_gddays_sf(gddl0, gddl123, gddlmaturity, sumgdd, \n    cco, ccx, gddcgc, gddcdc, sfredcgc, sfredccx)\n\nglobal.f90:2670\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.canopy_cover_no_stress_sf-NTuple{18, Any}","page":"Home","title":"AquaCrop.canopy_cover_no_stress_sf","text":"canopycovernostresssf = canopy_cover_no_stress_sf(dap, l0, l123, \n   lmaturity, gddl0, gddl123, gddlmaturity, cco, ccx,\n   cgc, cdc, gddcgc, gddcdc, sumgdd, typedays, sfredcgc, sfredccx, simulation)\n\nglobal.f90:1299\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.canopycover-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.canopycover","text":"canopycover(cropfield::AquaCropField; actual=true)\n\ncanopy cover in % of terrain, \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cc_at_gdd-NTuple{4, Any}","page":"Home","title":"AquaCrop.cc_at_gdd","text":"cci = cc_at_gdd(gddi, ccoin, gddcgcin, ccxin)\n\nglobal.f90:2654\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cc_at_gddtime-NTuple{4, Any}","page":"Home","title":"AquaCrop.cc_at_gddtime","text":"cci = cc_at_gddtime(gddtfictive, ccogiven, gddcgcgiven, ccxgiven)\n\nsimul.f90:3863\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cc_at_time-NTuple{4, Any}","page":"Home","title":"AquaCrop.cc_at_time","text":"cci = cc_at_time(dayi, ccoin, cgcin, ccxin)\n\nglobal.f90:2371\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cc_multiplier_weed-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.cc_multiplier_weed","text":"fweed = cc_multiplier_weed(procentweedcover, ccxcrop, fshapeweed)\n\nglobal.f90:2180\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cc_multiplier_weed_adjusted-NTuple{7, Any}","page":"Home","title":"AquaCrop.cc_multiplier_weed_adjusted","text":"fweedi, rcadj = cc_multiplier_weed_adjusted(procentweedcover, ccxcrop, fshapeweed, fccx, yeari, mweedadj, cropsubkind)\n\nglobal.f90:2204\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.cci_no_water_stress_sf-NTuple{22, Any}","page":"Home","title":"AquaCrop.cci_no_water_stress_sf","text":"cci = cci_no_water_stress_sf(dayi, l0, l12sf, l123, l1234, gddl0,\n                gddl12sf, gddl123, gddl1234, cco, ccx, cgc, gddcgc, cdc, gddcdc, sumgdd,\n                ratdgdd, sfredcgc, sfredccx, sfcdecline, themodecycle, simulation)\n\nglobal.f90:1391\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ccini_total_from_time_to_ccini-NTuple{25, Any}","page":"Home","title":"AquaCrop.ccini_total_from_time_to_ccini","text":"ccini = ccini_total_from_time_to_ccini(tempdaystoccini, tempgddaystoccini, \n                                        l0, l12, l12sf, l123, l1234, gddl0, \n                                        gddl12, gddl12sf, gddl123, \n                                        gddl1234, cco, ccx, cgc, gddcgc, \n                                        cdc, gddcdc, ratdgdd, sfredcgc, \n                                        sfredccx, sfcdecline, fweed, \n                                        themodecycle, simulation)\n\nglobal.f90:6371\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ccx_salt_stress_relationship!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.ccx_salt_stress_relationship!","text":"ccx_salt_stress_relationship!(outputs, gvars)\n\ntempprocessing.f90:3277\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.change_climate_data!-Tuple{AquaCropField, DataFrames.DataFrame}","page":"Home","title":"AquaCrop.change_climate_data!","text":"change_climate_data!(cropfield::AquaCropField, climate_data::DataFrame; kwargs...)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_drain_sum-NTuple{4, Any}","page":"Home","title":"AquaCrop.check_drain_sum","text":"drainsum, excess = check_drain_sum(layeri, drainsum, excess, soil_layers)\n\nsimul.f90:1806\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_files_in_project!-Tuple{AquaCrop.RepFileOK, Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.check_files_in_project!","text":"check_files_in_project!(fileok::RepFileOK, allok, input::ProjectInputType)\n\nglobal.f90:7195\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_for_keep_swc-Tuple{Any, Vector{AquaCrop.ProjectInputType}, Any, Any}","page":"Home","title":"AquaCrop.check_for_keep_swc","text":"runwithkeepswc, constzrxforrun = check_for_keep_swc(outputs, projectinput::Vector{ProjectInputType}, filepaths, gvars; kwargs...)\n\nglobal.f90:6643\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_for_print!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.check_for_print!","text":"check_for_print!(outputs, gvars)\n\nrun.f90:3476\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_for_watertable_in_profile-Tuple{Vector{AquaCrop.CompartmentIndividual}, Any}","page":"Home","title":"AquaCrop.check_for_watertable_in_profile","text":"logi = check_for_watertable_in_profile(profilecomp::Vector{CompartmentIndividual}, depthgwtmeter)\n\nglobal.f90:1540\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_germination!-Tuple{Any}","page":"Home","title":"AquaCrop.check_germination!","text":"check_germination!(gvars)\n\nsimul.f90:1130\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_kwargs-Tuple{Any}","page":"Home","title":"AquaCrop.check_kwargs","text":"check_kwargs(outputs; kwargs...)\n\nchekcs the necessary kwargs, check if all_ok == true\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_nofilerun-Tuple{Any}","page":"Home","title":"AquaCrop.check_nofilerun","text":"kwargs, all_ok = check_nofilerun(outputs; kwargs...)\n\nchecks if we have all the necessary keys for runtype = NoFileRun,  check if all_ok.logi == true\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_parentdir-Tuple{Any}","page":"Home","title":"AquaCrop.check_parentdir","text":"kwargs, all_ok = check_parentdir(outputs; kwargs...)\n\ninitializes the kwargs with the proper parentdir, check if all_ok.logi == true \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_runtype-Tuple{Any}","page":"Home","title":"AquaCrop.check_runtype","text":"kwargs, all_ok = check_runtype(outputs; kwargs...)\n\ninitializes the kwargs with the proper runtype, check if all_ok.logi == true \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.check_water_salt_balance!-NTuple{4, Any}","page":"Home","title":"AquaCrop.check_water_salt_balance!","text":"check_water_salt_balance!(gvars, lvars, dayi, control)\n\nsimul.f90:2191\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.close_climate!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.close_climate!","text":"close_climate!(outputs, gvars; kwargs...)\n\ndelete the climate data from gvars arrays and outputs arrays\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.close_irrigation!-Tuple{Any}","page":"Home","title":"AquaCrop.close_irrigation!","text":"close_irrigation!(gvars; kwargs...)\n\ndelete the irrigation data from gvars arrays\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.close_management!-Tuple{Any}","page":"Home","title":"AquaCrop.close_management!","text":"close_management!(gvars; kwargs...)\n\ndelete the management data from gvars arrays\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.co2_for_simulation_period-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.co2_for_simulation_period","text":"co2forsimulationperiod = co2_for_simulation_period(co2_file, fromdaynr, todaynr)\n\nglobal.f90:3114\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.complete_climate_description!-Tuple{AquaCrop.RepClim}","page":"Home","title":"AquaCrop.complete_climate_description!","text":"complete_climate_description!(record::RepClim)\n\nglobal.f90:8223\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.complete_crop_description!-Tuple{AquaCrop.RepCrop, AquaCrop.RepSim, AquaCrop.RepManag}","page":"Home","title":"AquaCrop.complete_crop_description!","text":"complete_crop_description!(crop::RepCrop, simulation::RepSim, management::RepManag)\n\nglobal.f90:5624\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.complete_profile_description!-Tuple{Vector{AquaCrop.SoilLayerIndividual}, Vector{AquaCrop.CompartmentIndividual}, AquaCrop.RepSim, AquaCrop.RepContent}","page":"Home","title":"AquaCrop.complete_profile_description!","text":"complete_profile_description!(soil_layers::Vector{SoilLayerIndividual}, \n        compartments::Vector{CompartmentIndividual}, simulation::RepSim, total_water_content::RepContent)\n\nglobal.f90:7561\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.concentrate_salts!-Tuple{Any}","page":"Home","title":"AquaCrop.concentrate_salts!","text":"concentrate_salts!(gvars)\n\nsimul.f90:4343\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.correction_anaeroby-NTuple{6, Any}","page":"Home","title":"AquaCrop.correction_anaeroby","text":"alfa, dayanaero = correction_anaeroby(compartment, alfa, daysubmerged, simulparam, soil_layers, crop)\n\nsimul.f90:1453 note that we must do compartment.DayAnaero = dayanaero after calling this function\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.create_daily_climfiles!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.create_daily_climfiles!","text":"create_daily_climfiles(outputs, gvars; kwargs...)\n\nrun.f90:5592\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.create_eval_data!-Tuple{Any}","page":"Home","title":"AquaCrop.create_eval_data!","text":"create_eval_data!(gvars)\n\nrun.f90:5451\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.crop_stress_parameters_soil_fertility-Tuple{AquaCrop.RepShapes, Any}","page":"Home","title":"AquaCrop.crop_stress_parameters_soil_fertility","text":"stressout = crop_stress_parameters_soil_fertility(cropsresp::RepShapes, stresslevel)\n\nglobal.f90:1231\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.crop_stress_parameters_soil_salinity-NTuple{16, Any}","page":"Home","title":"AquaCrop.crop_stress_parameters_soil_salinity","text":"stress_response = crop_stress_parameters_soil_salinity(ccxred, ccdistortion, \n         cco, ccx, cgc, gddcgc, cropdeterm, l12, lflor, \n         lengthflor, l123, gddl12, gddlflor, gddlengthflor, \n         gddl123, themodecycle)\n\ntempprocessing.f90:1643\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.dailyupdate!-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.dailyupdate!","text":"dailyupdate!(cropfield::AquaCropField)\n\nUpdates the AquaCropField by one day\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.days_to_reach_cc_with_given_cgc-NTuple{5, Any}","page":"Home","title":"AquaCrop.days_to_reach_cc_with_given_cgc","text":"daystoresult = days_to_reach_cc_with_given_cgc(cctoreach, ccoval, ccxval, cgcval, l0)\n\nglobal.f90:1809\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.default_filepaths-Tuple{AbstractString}","page":"Home","title":"AquaCrop.default_filepaths","text":"fl = default_filepaths(parentdir::AbstractString; kwargs...)\n\nsets the default directories for the input files.\n\nstartunit.f90:420\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.degrees_day-NTuple{5, Any}","page":"Home","title":"AquaCrop.degrees_day","text":"dgrd = degrees_day(tbase, tupper, tdaymin, tdaymax, gddselectedmethod)\n\nglobal.f90:2419\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.derive_smax_top_bottom-Tuple{AquaCrop.RepCrop}","page":"Home","title":"AquaCrop.derive_smax_top_bottom","text":"sxtop, sxbot = derive_smax_top_bottom(crop::RepCrop)\n\nglobal.f90:1944\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.designate_soillayer_to_compartments!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.designate_soillayer_to_compartments!","text":"designate_soillayer_to_compartments!(compartments::Vector{CompartmentIndividual}, soil_layers::Vector{SoilLayerIndividual})\n\nglobal.f90:7393\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinate_coeffcapillaryrise!-Tuple{AquaCrop.SoilLayerIndividual}","page":"Home","title":"AquaCrop.determinate_coeffcapillaryrise!","text":"determinate_coeffcapillaryrise!(soillayer::SoilLayerIndividual)\n\nsets the coefficients for capillary rise of soillayer considering its own data.\n\nglobal.f90:4034\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determinate_soilclass!-Tuple{AquaCrop.SoilLayerIndividual}","page":"Home","title":"AquaCrop.determinate_soilclass!","text":"determinate_soilclass!(soillayer::SoilLayerIndividual)\n\nsets the soil class of soillayer considering its own data.\n\nglobal.f90:1909\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_biomass_and_yield!-NTuple{4, Any}","page":"Home","title":"AquaCrop.determine_biomass_and_yield!","text":"determine_biomass_and_yield!(gvars, lvars, sumgddadjcc, virtualtimecc)\n\nsimul.f90:528\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_cci!-NTuple{11, Any}","page":"Home","title":"AquaCrop.determine_cci!","text":"determine_cci!(gvars, ccxtotal, ccototal, fracassim, \n                        mobilizationon, storageon, tadj, virtualtimecc, \n                        cdctotal, dayfraction, \n                        gddcdctotal)\n\nsimul.f90:4611\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_cci_gdd!-NTuple{13, Any}","page":"Home","title":"AquaCrop.determine_cci_gdd!","text":"determine_cci_gdd!(gvars, ccxtotal, ccototal, \n                        fracassim, mobilizationon, \n                        storageon, sumgddadjcc, virtualtimecc, \n                        cdctotal, gddayfraction, \n                        gddayi, gddcdctotal, gddtadj)\n\nsimul.f90:3234\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_ccx_adjusted_cdc-NTuple{6, Any}","page":"Home","title":"AquaCrop.determine_ccx_adjusted_cdc","text":"ccxadjusted = determine_ccx_adjusted_cdc(cciprev, virtualtimecc, cgcadjusted, ccxsf, tfinalccx, crop)\n\nsimul.f90:5310\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_ccx_adjusted_gdd-NTuple{7, Any}","page":"Home","title":"AquaCrop.determine_ccx_adjusted_gdd","text":"ccxadjusted = determine_ccx_adjusted_gdd(cciprev, ccxsf, gddcgcadjusted, gddayi, sumgddadjcc, gddtfinalccx, cco)\n\nsimul.f90:3882\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_cdc_adjusted_water_stress-NTuple{9, Any}","page":"Home","title":"AquaCrop.determine_cdc_adjusted_water_stress","text":"cdcadjusted, kssen, stresssenescence = determine_cdc_adjusted_water_stress(eto, timesenescence, cdctotal, ccxsfcd, ccxtotal,\n                                                                           root_zone_wc, crop, simulparam, simulation)\n\nsimul.f90:5222\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_cgc_adjusted-NTuple{5, Any}","page":"Home","title":"AquaCrop.determine_cgc_adjusted","text":"cgcadjusted, stressleaf = determine_cgc_adjusted(cgcsf, pleafllact, \n                                                 root_zone_wc, crop, simulation)\n\nsimul.f90:5171\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_cni_and_iii-Tuple{Any}","page":"Home","title":"AquaCrop.determine_cni_and_iii","text":"cn1, cn3 = determine_cni_and_iii(cn2)\n\nglobal.f90:2481\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_date-Tuple{Int64}","page":"Home","title":"AquaCrop.determine_date","text":"dayi, monthi, yeari = determine_date(dar_nr)\n\nglobal.f90:2397\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_day_nr-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.determine_day_nr","text":"day_nr = determine_day_nr(dayi, monthi, yeari)\n\nglobal.f90:2387\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_gddcdc_adjusted_water_stress-NTuple{9, Any}","page":"Home","title":"AquaCrop.determine_gddcdc_adjusted_water_stress","text":"gddcdcadjusted, kssen, stresssenescence = determine_gddcdc_adjusted_water_stress(eto, timesenescence, gddcdctotal, ccxsfcd, ccxtotal,\n                                                        root_zone_wc, crop, simulparam, simulation)\n\nsimul.f90:3917\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_gddcgc_adjusted-NTuple{5, Any}","page":"Home","title":"AquaCrop.determine_gddcgc_adjusted","text":"gddcgcadjusted, stressleaf = determine_gddcgc_adjusted(cgcgddsf, pleafllact, \n                                                       root_zone_wc, crop, simulation)\n\nsimul.f90:3788\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_growth_stage!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.determine_growth_stage!","text":"determine_growth_stage!(gvars, dayi, cciprev)\n\nrun.f90:4075\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_length_growth_stages-NTuple{12, Any}","page":"Home","title":"AquaCrop.determine_length_growth_stages","text":"length123, stlength, length12, cgcval = determine_length_growth_stages(ccoval, ccxval, cdcval, l0, totallength, \n                                                                    cgcgiven, thedaystoccini, theplanting, \n                                                                    length123, stlength, length12, cgcval)\n\nglobal.f90:1644\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_linked_simday1!-Tuple{AquaCrop.RepSim, AquaCrop.RepCrop, AquaCrop.RepClim, Any}","page":"Home","title":"AquaCrop.determine_linked_simday1!","text":"determine_linked_simday1!(simulation::RepSim, crop::RepCrop, clim_record::RepClim, clim_file)\n\nglobal.f90:4677\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_nrand_thickness_compartments!-Tuple{Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.determine_nrand_thickness_compartments!","text":"determine_nrand_thickness_compartments!(compartments::Vector{CompartmentIndividual}, soil_layers::Vector{SoilLayerIndividual}, compdefthick)\n\nglobal.f90:4063\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_potential_biomass!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.determine_potential_biomass!","text":"determine_potential_biomass!(gvars, virtualtimecc, sumgddadjcc)\n\nsimul.f90:453\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_root_zone_anaero_conditions-NTuple{6, Any}","page":"Home","title":"AquaCrop.determine_root_zone_anaero_conditions","text":"redfact, dayanaero = determine_root_zone_anaero_conditions(wsat, wact, anaevol, zr, simulation, simulparam)\n\nsimul.f90:1490 note that we must do simulation.DayAnaero = dayanaero after calling this function\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_root_zone_salt_content!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.determine_root_zone_salt_content!","text":"determine_root_zone_salt_content!(gvars, rootingdepth)\n\nglobal.f90:4089\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_root_zone_wc!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.determine_root_zone_wc!","text":"determine_root_zone_wc!(gvars, rootingdepth)\n\nglobal.f90:7750\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.determine_salt_content!-Tuple{AquaCrop.CompartmentIndividual, Vector{AquaCrop.SoilLayerIndividual}, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.determine_salt_content!","text":"determine_salt_content!(compartment::CompartmentIndividual, soil_layers::Vector{SoilLayerIndividual}, simulparam::RepParam)\n\nglobal.f90:4258\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.dryyield-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.dryyield","text":"dryyield = dryyield(cropfield::AquaCropField)\n\ndryyield in ton/ha\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ececomp-Tuple{AquaCrop.CompartmentIndividual, Any}","page":"Home","title":"AquaCrop.ececomp","text":"ece = ececomp(compartment::CompartmentIndividual, gvars)\n\nglobal.f90:2523\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ecswcomp-Tuple{AquaCrop.CompartmentIndividual, Any, Any}","page":"Home","title":"AquaCrop.ecswcomp","text":"ecs = ecswcomp(compartment::CompartmentIndividual, atfc, gvars)\n\nglobal.f90:2547\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.effect_soil_fertility_salinity_stress!-NTuple{8, Any}","page":"Home","title":"AquaCrop.effect_soil_fertility_salinity_stress!","text":"effect_soil_fertility_salinity_stress!(gvars, stresssfadjnew, coeffb0salt, \n                                             coeffb1salt, coeffb2salt, \n                                             nrdaygrow, stresstotsaltprev, \n                                             virtualtimecc)\n\nsimul.f90:3985\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.extract_water_from_evap_layer!-NTuple{4, Any}","page":"Home","title":"AquaCrop.extract_water_from_evap_layer!","text":"extract_water_from_evap_layer!(gvars, evaptolose, zact, stg1)\n\nsimul.f90:4377\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.fadjusted_for_co2-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.fadjusted_for_co2","text":"fadjustedforco2 = fadjusted_for_co2(co21, wpi, percenta)\n\nglobal.f90:2749\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.feedback_cc!-Tuple{Any}","page":"Home","title":"AquaCrop.feedback_cc!","text":"feedback_cc!(gvars)\n\nsimul.f90:5348\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.file_management!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.file_management!","text":"file_management!(outputs, gvars, nrrun; kwargs...)\n\nrun.f90:7760\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.finalize_outputs!-Tuple{Any}","page":"Home","title":"AquaCrop.finalize_outputs!","text":"finalize_outputs!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.finalize_run1!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.finalize_run1!","text":"finalize_run1!(outputs, gvars, nrrun; kwargs...)\n\nrun.f90:7390\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.finalize_run2!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.finalize_run2!","text":"finalize_run2!(outputs, gvars, nrrun; kwargs...)\n\nrun.f90:4355\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.finalize_the_program!-Tuple{Any}","page":"Home","title":"AquaCrop.finalize_the_program!","text":"finalize_the_program!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.find_values-NTuple{7, Any}","page":"Home","title":"AquaCrop.find_values","text":"zcn, ecdsm = find_values(atdaynr, daynr1, daynr2, z1, ec1, z2, ec2)\n\nglobal.f90:6140\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_dayout!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_dayout!","text":"flush_output_dayout!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_etodatasim!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_etodatasim!","text":"flush_output_etodatasim!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_evaldataout!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_evaldataout!","text":"flush_output_evaldataout!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_harvestsout!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_harvestsout!","text":"flush_output_harvestsout!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_logger!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_logger!","text":"flush_output_logger!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_raindatasim!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_raindatasim!","text":"flush_output_raindatasim!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_seasonout!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_seasonout!","text":"flush_output_seasonout!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_tcropsim!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_tcropsim!","text":"flush_output_tcropsim!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.flush_output_tempdatasim!-Tuple{Any}","page":"Home","title":"AquaCrop.flush_output_tempdatasim!","text":"flush_output_tempdatasim!(outputs)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.fraction_flowering-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.fraction_flowering","text":"f = fraction_flowering(dayi, crop, simulation)\n\nsimul.f90:1025\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.fraction_period-Tuple{Any, Any}","page":"Home","title":"AquaCrop.fraction_period","text":"fi = fraction_period(diflor, crop)\n\nsimul.f90:1050\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.freshyield-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.freshyield","text":"freshyield = freshyield(cropfield::AquaCropField)\n\nfreshyield in ton/ha\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.from_gravelmass_to_gravelvol-Tuple{Any, Any}","page":"Home","title":"AquaCrop.from_gravelmass_to_gravelvol","text":"gravelvol = from_gravelmass_to_gravelvol(porositypercent, gravelmasspercent)\n\ncalculates the gravel volume of soil layer.\n\nglobal.f90:1521\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.full_undefined_record-Tuple{AquaCrop.RepClim}","page":"Home","title":"AquaCrop.full_undefined_record","text":"logi = full_undefined_record(record::RepClim)\n\nglobal.f90:2826\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.gddcdc_to_cdc-NTuple{11, Any}","page":"Home","title":"AquaCrop.gddcdc_to_cdc","text":"cdc = gddcdc_to_cdc(plantdaynr, d123, gddl123, gddharvest, ccx, gddcdc, tbase, tupper, notempfiletmin, notempfiletmax, gvars)\n\ntempprocessing.f90:1545\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_cdc_adjusted_no_stress_new-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_cdc_adjusted_no_stress_new","text":"cdcadjusted = get_cdc_adjusted_no_stress_new(ccx, cdc, ccxadjusted)\n\nsimul.f90:412\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_day_switch_to_linear-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_day_switch_to_linear","text":"tswitch, higclinear = get_day_switch_to_linear(himax, dhidt, higc)\n\nglobal.f90:2988\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_decade_eto_dataset!-Tuple{Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_decade_eto_dataset!","text":"get_decade_eto_dataset!(eto_dataset, daynri, eto_array, eto_record::RepClim)\n\nclimprocessing.f90:325\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_decade_rain_dataset!-Tuple{Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_decade_rain_dataset!","text":"get_decade_rain_dataset!(rain_dataset, daynri, rain_array, rain_record::RepClim)\n\nclimprocessing.f90:515\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_decade_temperature_dataset!-Tuple{Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_decade_temperature_dataset!","text":"get_decade_temperature_dataset!(tmin_dataset, tmax_dataset, daynri, temperature_array, temperature_record::RepClim)\n\ntempprocessing.f90:362\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_gddcdc_adjusted_no_stress-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_gddcdc_adjusted_no_stress","text":"gddcdcadjusted = get_gddcdc_adjusted_no_stress(ccx, gddcdc, ccxadjusted)\n\nsimul.f90:3905\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_gwt_set!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_gwt_set!","text":"get_gwt_set!(gvars, parentdir, daynrin)\n\nrun.f90:3526\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_interpolation_parameters-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_interpolation_parameters","text":" aover3, bover2, c = get_interpolation_parameters(c1, c2, c3)\n\ntempprocessing.f90:854\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_irri_param!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.get_irri_param!","text":"get_irri_param!(gvars, lvars)\n\nrun.f90:6262\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_limits_evap_layer-NTuple{5, Any}","page":"Home","title":"AquaCrop.get_limits_evap_layer","text":"wupper, wlower = get_limits_evap_layer(xproc, simulation, compartments, soil_layers, soil)\n\nsimul.f90:4575\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_monthly_eto_dataset!-Tuple{Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_monthly_eto_dataset!","text":"get_monthly_eto_dataset!(eto_dataset, daynri, eto_array, eto_record::RepClim)\n\nclimprocessing.f90:87\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_monthly_rain_dataset!-Tuple{Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_monthly_rain_dataset!","text":"get_monthly_rain_dataset!(rain_dataset, daynri, rain_array, rain_record::RepClim)\n\nclimprocessing.f90:604\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_monthly_temperature_dataset!-Tuple{Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_monthly_temperature_dataset!","text":"get_monthly_temperature_dataset!(tmin_dataset, tmax_dataset, daynri, temperature_array, temperature_record::RepClim)\n\ntempprocessing.f90:596\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_new_ccx_and_cdc-NTuple{5, Any}","page":"Home","title":"AquaCrop.get_new_ccx_and_cdc","text":"ccxadjusted, cdcadjusted = get_new_ccx_and_cdc(cciprev, cdc, ccx, virtualtimecc, crop)\n\nsimul.f90:5331\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_new_ccx_and_gddcdc-NTuple{6, Any}","page":"Home","title":"AquaCrop.get_new_ccx_and_gddcdc","text":"ccx, gddcdc = get_new_ccx_and_gddcdc(cciprev, gddcdc, ccx, \n                                        sumgddadjcc, gddayi,\n                                        crop)\n\nsimul.f90:3967\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_next_harvest!-Tuple{Any}","page":"Home","title":"AquaCrop.get_next_harvest!","text":"get_next_harvest!(gvars)\n\nrun.f90:3670\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_parameters-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_parameters","text":"ul, ll, mid = get_parameters(c1, c2, c3)\n\ntempprocessing.f90:580\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_potvalsf-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.get_potvalsf","text":"potvalsf = get_potvalsf(dap, sumgddadjcc, gvars)\n\nrun.f90:6468\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_project_type-Tuple{Any}","page":"Home","title":"AquaCrop.get_project_type","text":"pt = get_project_type(theprojectfile; kwargs...)\n\ngets the project type for a given file.\n\nstartunit.f90:322\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_results_parameters-Tuple{Any, String}","page":"Home","title":"AquaCrop.get_results_parameters","text":"resultsparameters = get_results_parameters(outputs, path::String; kwargs...)\n\ngets all the results parameters in filepaths[:simul].\n\nstartunit.f90:426\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three_eto-Tuple{Any, Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_set_of_three_eto","text":"c1, c2, c3 = get_set_of_three_eto(dayn, deci, monthi, yeari, eto_array, eto_record::RepClim)\n\nclimprocessing.f90:393\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three_months_eto-NTuple{4, Any}","page":"Home","title":"AquaCrop.get_set_of_three_months_eto","text":"c1, c2, c3, x1, x2, x3, t1 = get_set_of_three_months_eto(monthi, yeari, eto_array, eto_record)\n\nclimprocessing.f90:128\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three_months_rain-NTuple{4, Any}","page":"Home","title":"AquaCrop.get_set_of_three_months_rain","text":"c1, c2, c3 = get_set_of_three_months_rain(monthi, yeari, rain_array, rain_record)\n\nclimprocessing.f90:665\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three_months_temperature-Tuple{Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_set_of_three_months_temperature","text":"c1min, c2min, c3min, c1max, c2max, c3max, x1, x2, x3, t1 = get_set_of_three_months_temperature(monthi, yeari, temperature_array, temperature_record::RepClim)\n\ntempprocessing.f90:645\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_set_of_three_temperature-Tuple{Any, Any, Any, Any, Any, AquaCrop.RepClim}","page":"Home","title":"AquaCrop.get_set_of_three_temperature","text":"c1min, c1max, c2min, c2max, c3min, c3max = get_set_of_three_temperature(dayn, deci, monthi, yeari, temperature_array, temperature_record::RepClim)\n\ntempprocessing.f90:439\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_sumgdd_before_simulation!-Tuple{Any}","page":"Home","title":"AquaCrop.get_sumgdd_before_simulation!","text":"get_sumgdd_before_simulation!(gvars)\n\nrun.f90:3798\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_weed_rc-NTuple{11, Any}","page":"Home","title":"AquaCrop.get_weed_rc","text":"weedrcdaycalc, tempweeddeltarc = get_weed_rc(theday, gddayi, fccx, tempweedrcinput, tempweedadj,\n                        tempweeddeltarc, l12sf, templ123, gddl12sf, \n                        tempgddl123, themodecycle)\n\nglobal.f90:1567\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.get_z_and_ec_gwt!-Tuple{Any}","page":"Home","title":"AquaCrop.get_z_and_ec_gwt!","text":"get_z_and_ec_gwt!(gvars)\n\nrun.f90:6159\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.getks-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.getks","text":"ksi = getks(t0, t1, tin)\n\nglobal.f90:2021\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.getparameter-Tuple{AquaCrop.ParametersContainer, Symbol}","page":"Home","title":"AquaCrop.getparameter","text":"getparameter(parameterscontainer::ParametersContainer{T}, parameterkey::Symbol)\n\ngets the  parameterkey from parameterscontainer\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.growing_degree_days-NTuple{7, Any}","page":"Home","title":"AquaCrop.growing_degree_days","text":"gdd1234 = growing_degree_days(valperiod, firstdayperiod, tbase, tupper, gvars, tdaymin, tdaymax)\n\ntempprocessing.f90:871\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.harvest!-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.harvest!","text":"harvest!(cropfield::AquaCropField)\n\ndoes a daily update with harvest\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.harvest_index_day-NTuple{12, Any}","page":"Home","title":"AquaCrop.harvest_index_day","text":"hiday, hifinal, percentlagphase = harvest_index_day(dap, daystoflower, himax, dhidt, cci, \n                              ccxadjusted, theccxwithered, \n                              percccxhifinal, tempplanting, \n                              hifinal,\n                              crop, simulation)\n\nglobal.f90:5530\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.harvest_index_growth_coefficient-Tuple{Any, Any}","page":"Home","title":"AquaCrop.harvest_index_growth_coefficient","text":"higc = harvest_index_growth_coefficient(himax, dhidt)\n\nglobal.f90:1860\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.hi_multiplier-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.hi_multiplier","text":"himultiplier = hi_multiplier(ratiobm, rangebm, hiadj)\n\nglobal.f90:2295\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.horizontal_inflow_gwtable!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.horizontal_inflow_gwtable!","text":"horizontal_inflow_gwtable!(gvars, lvars, depthgwtmeter)\n\nsimul.f90:5360\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_climate!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.initialize_climate!","text":"initialize_climate!(outputs, gvars, nrrun; kwargs...)\n\nrun.f90:5006\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_lvars-Tuple{}","page":"Home","title":"AquaCrop.initialize_lvars","text":"initialize_lvars()\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_project-NTuple{4, Any}","page":"Home","title":"AquaCrop.initialize_project","text":"gvars, all_ok = initialize_project(outputs, theprojectfile, theprojecttype, filepaths; kwargs...)\n\nstartunit.f90:535\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_project_filename-Tuple{Any, Any}","page":"Home","title":"AquaCrop.initialize_project_filename","text":"project_filenames = initialize_project_filename(outputs, filepaths; kwargs...)\n\nGets all the names of the projects files.\n\nstartunit.f90:441\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_project_input!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.initialize_project_input!","text":"initialize_project_input!(gvars, filename, parentdir; kwargs...)\n\nproject_input.f90:152\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_run_part1!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.initialize_run_part1!","text":"initialize_run_part1!(outputs, gvars, nrrun; kwargs...)\n\nrun.f90:6590\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_run_part2!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.initialize_run_part2!","text":"initialize_run_part2!(outputs, gvars, nrrun; kwargs...)\n\nrun.f90:6672\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_settings-Tuple{Any, Any}","page":"Home","title":"AquaCrop.initialize_settings","text":"gvars = initialize_settings(outputs, filepaths; kwargs...)\n\ngets the initial settings.\n\ninitialsettings.f90:201\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_simulation_run_part1!-Tuple{Any, Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.initialize_simulation_run_part1!","text":"initialize_simulation_run_part1!(outputs, gvars, projectinput; kwargs...)\n\nrun.f90:4754\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_simulation_run_part2!-Tuple{Any, Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.initialize_simulation_run_part2!","text":"initialize_simulation_run_part2!(outputs, gvars, projectinput::ProjectInputType; kwargs...)\n\nrun.f90:5018\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_the_program-Tuple{Any, Any}","page":"Home","title":"AquaCrop.initialize_the_program","text":"filepaths = initialize_the_program(outputs, parentdir; kwargs...)\n\nGets the file paths and the simulation parameters.\n\nstartunit.f90:417\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.initialize_transfer_assimilates!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.initialize_transfer_assimilates!","text":"initialize_transfer_assimilates!(gvars, lvars)\n\nrun.f90:6378\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.irri_manual!-Tuple{Any}","page":"Home","title":"AquaCrop.irri_manual!","text":"irri_manual!(gvars)\n\nrun.f90:6224\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.irri_out_season-Tuple{Any}","page":"Home","title":"AquaCrop.irri_out_season","text":"irri = irri_out_season(gvars)\n\nrun.f90:6188\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.isleapyear-Tuple{Any}","page":"Home","title":"AquaCrop.isleapyear","text":"leapyear = isleapyear(year)\n\nglobal.f90:7100\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ks_any-NTuple{4, Any}","page":"Home","title":"AquaCrop.ks_any","text":"ksval = ks_any(wrel, pulactual, pllactual, shapefactor)\n\nglobal.f90:2611\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ks_salinity-NTuple{5, Any}","page":"Home","title":"AquaCrop.ks_salinity","text":"m = ks_salinity(salinityresponsconsidered, ecen, ecex, ecevar, ksshapesalinity)\n\nglobal.f90:2043\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.ks_temperature-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.ks_temperature","text":"m = ks_temperature(t0, t1, tin)\n\nglobal.f90:1981\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.length_canopy_decline-Tuple{Any, Any}","page":"Home","title":"AquaCrop.length_canopy_decline","text":"nd = length_canopy_decline(ccx, cdc)\n\nglobal.f90:1839\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_clim!-Tuple{AquaCrop.RepClim, Any}","page":"Home","title":"AquaCrop.load_clim!","text":"load_clim!(record::RepClim, clim_file; kwargs...)\n\nglobal.f90:5936\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_crop!-Tuple{AquaCrop.RepCrop, AquaCrop.RepPerennialPeriod, Any}","page":"Home","title":"AquaCrop.load_crop!","text":"load_crop!(crop::RepCrop, perennial_period::RepPerennialPeriod, crop_file; kwargs...)\n\nglobal.f90:4799\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_groundwater!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_groundwater!","text":"load_groundwater!(gvars, groundwater_file)\n\nglobal.f90:5981\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_gvars_from_toml!-Tuple{AquaCrop.RepParam, Any}","page":"Home","title":"AquaCrop.load_gvars_from_toml!","text":"load_gvars_from_toml!(simulparam::RepParam, auxparfile; kwargs...)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_initial_conditions!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_initial_conditions!","text":" load_initial_conditions!(gvars, swcinifilefull)\n\nglobal.f90:6486\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_irri_schedule_info!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_irri_schedule_info!","text":"load_irri_schedule_info!(gvars, irri_file)\n\nglobal.f90:2860\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_management!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_management!","text":"load_management!(gvars, man_file; kwargs...)\n\nglobal.f90:3350\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_offseason!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.load_offseason!","text":"load_offseason!(gvars, offseason_file)\n\nglobal.f90:5769\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_profile-Tuple{Any, Any, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.load_profile","text":"soil, soil_layers, compartments = load_profile(filepath, simulparam::RepParam; kwargs...)\n\nloads data from filepath.\n\nglobal.f90:7590\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_profile_processing!-Tuple{AquaCrop.RepSoil, Vector{AquaCrop.SoilLayerIndividual}, Vector{AquaCrop.CompartmentIndividual}, AquaCrop.RepParam}","page":"Home","title":"AquaCrop.load_profile_processing!","text":"load_profile_processing!(soil::RepSoil, soil_layers::Vector{SoilLayerIndividual},\n    compartments::Vector{CompartmentIndividual}, simulparam::RepParam)\n\nloads some data.\n\nglobal.f90:7684\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_program_parameters_project_plugin!-Tuple{AquaCrop.RepParam, Any}","page":"Home","title":"AquaCrop.load_program_parameters_project_plugin!","text":"load_program_parameters_project_plugin!(simulparam::RepParam, auxparfile; kwargs...)\n\nstartunit.f90:767\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_projectinput_from_vardict-Tuple{Any}","page":"Home","title":"AquaCrop.load_projectinput_from_vardict","text":"load_projectinput_from_vardict(parentdir; kwargs...)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_resultsparameters_from_vardict-Tuple{}","page":"Home","title":"AquaCrop.load_resultsparameters_from_vardict","text":"load_resultsparameters_from_vardict(;kwargs...)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.load_simulation_project!-Tuple{Any, Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.load_simulation_project!","text":"load_simulation_project!(outputs, gvars, projectinput::ProjectInputType; kwargs...)\n\ntempprocessing.f90:1932\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.max_crat_depth-NTuple{5, Any}","page":"Home","title":"AquaCrop.max_crat_depth","text":"crmax = max_crat_depth(paramcra, paramcrb, ksat, zi, depthgwt)\n\nglobal.f90:2156\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.mixing!-Tuple{AquaCrop.CompartmentIndividual, AquaCrop.RepParam, Vararg{Any, 4}}","page":"Home","title":"AquaCrop.mixing!","text":"mixing!(compartment::CompartmentIndividual, simulparam::RepParam, mm1, mm2, diff, ni)\n\nsimul.f90:2650\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.move_salt_to!-Tuple{AquaCrop.CompartmentIndividual, AquaCrop.RepParam, Any, Any, Any}","page":"Home","title":"AquaCrop.move_salt_to!","text":"move_salt_to!(compx::CompartmentIndividual, simulparam::RepParam, soil_layers, celx_local, ds)\n\nsimul.f90:2675\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.multiplier_cco_self_thinning-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.multiplier_cco_self_thinning","text":"fcco = multiplier_cco_self_thinning(yeari, yearx, shapefactor)\n\nglobal.f90:2588\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.multiplier_ccx_self_thinning-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.multiplier_ccx_self_thinning","text":"fccx = multiplier_ccx_self_thinning(yeari, yearx, shapefactor)\n\nglobal.f90:1784\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.no_adjustment-Tuple{Any}","page":"Home","title":"AquaCrop.no_adjustment","text":"nadj = no_adjustment(fcvolpr)\n\nglobal.f90:4195\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.no_effect_stress!-Tuple{AquaCrop.RepEffectStress}","page":"Home","title":"AquaCrop.no_effect_stress!","text":"no_effect_stress!(theeffectstress::RepEffectStress)\n\nsimul.f90:4128\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.no_irrigation!-Tuple{Any}","page":"Home","title":"AquaCrop.no_irrigation!","text":"no_irrigation!(gvars)\n\nglobal.f90:2838\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.open_climfiles_and_get_data_firstday!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.open_climfiles_and_get_data_firstday!","text":"open_climfiles_and_get_data_firstday!(outputs, gvars; kwargs...)\n\nrun.f90:5962\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.open_harvest_info!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.open_harvest_info!","text":"open_harvest_info!(gvars, path; kwargs...)\n\nrun.f90:5937\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.open_irrigation_file!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.open_irrigation_file!","text":"open_irrigation_file!(gvars, path)\n\nrun.f90:4436\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.prepare_stage1!-Tuple{Any}","page":"Home","title":"AquaCrop.prepare_stage1!","text":"prepare_stage1!(gvars)\n\nsimul.f90:4140\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.prepare_stage2!-Tuple{Any}","page":"Home","title":"AquaCrop.prepare_stage2!","text":"prepare_stage2!(gvars)\n\nsimul.f90:4212\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_climate_nextday!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.read_climate_nextday!","text":"read_climate_nextday!(outputs, gvars)\n\nrun.f90:7345\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_dayout-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_dayout","text":"read_output_from_dayout(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_etodatasim-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_etodatasim","text":"tlow, thigh = read_output_from_etodatasim(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_evaldataout-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_evaldataout","text":"read_output_from_evaldataout(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_harvestsout-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_harvestsout","text":"read_output_from_harvestsout(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_logger-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_logger","text":"str = read_output_from_logger(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_raindatasim-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_raindatasim","text":"tlow, thigh = read_output_from_raindatasim(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_seasonout-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_seasonout","text":"read_output_from_seasonout(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_tcropsim-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_tcropsim","text":"tlow, thigh = read_output_from_tcropsim(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_output_from_tempdatasim-Tuple{Any, Int64}","page":"Home","title":"AquaCrop.read_output_from_tempdatasim","text":"tlow, thigh = read_output_from_tempdatasim(outputs, i::Int)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.read_temperature_file!-Union{Tuple{T}, Tuple{AquaCrop.ParametersContainer{T}, Any}} where T","page":"Home","title":"AquaCrop.read_temperature_file!","text":"read_temperature_file!(array_parameters::ParametersContainer{T}, temperature_file) where T\n\ntempprocessing.f90:307\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.record_harvest!-NTuple{5, Any}","page":"Home","title":"AquaCrop.record_harvest!","text":"record_harvest!(outputs, gvars, nrcut, dayinseason, nrrun)\n\nrun.f90:6697\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.relationships_for_fertility_and_salt_stress!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.relationships_for_fertility_and_salt_stress!","text":"relationships_for_fertility_and_salt_stress!(outputs, gvars)\n\nrun.f90:3954\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.required_gdd-NTuple{6, Any}","page":"Home","title":"AquaCrop.required_gdd","text":"requiredgdd = required_gdd(ccitofind, cco, ccx, gddcgcadjusted, gddayi, sumgddadjcc)\n\nsimul.f90:3841\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.required_time_new-NTuple{5, Any}","page":"Home","title":"AquaCrop.required_time_new","text":"t = required_time_new(ccitofind, cco, ccx, cgcadjusted, virtualtimecc)\n\nsimul.f90:5270\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.reset_gdd_variables!-Tuple{Any}","page":"Home","title":"AquaCrop.reset_gdd_variables!","text":"reset_gdd_variables!(gvars)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.reset_previous_sum!-Tuple{Any}","page":"Home","title":"AquaCrop.reset_previous_sum!","text":"reset_previous_sum!(gvars)\n\nrun.f90:3445\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.reset_swc_to_fc!-Tuple{AquaCrop.RepSim, Vector{AquaCrop.CompartmentIndividual}, Vector{AquaCrop.SoilLayerIndividual}, Any}","page":"Home","title":"AquaCrop.reset_swc_to_fc!","text":"reset_swc_to_fc!(simulation::RepSim, compartments::Vector{CompartmentIndividual},\n                 soil_layers::Vector{SoilLayerIndividual}, ziaqua)\n\nglobal.f90:4758\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.root_max_in_soil_profile-Tuple{Any, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.root_max_in_soil_profile","text":"zmax = root_max_in_soil_profile(zmaxcrop, soil_layers::Vector{SoilLayerIndividual})\n\nglobal.f90:1092\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.run_simulation!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.run_simulation!","text":"run_simulation!(outputs, gvars; kwargs...)\n\nrun.f90:7779\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.salt_solution_deposit!-Tuple{AquaCrop.CompartmentIndividual, AquaCrop.RepParam, Any, Any}","page":"Home","title":"AquaCrop.salt_solution_deposit!","text":"salt_solution_deposit!(compartment::CompartmentIndividual, simulparam::RepParam, i, mm)\n\nglobal.f90:2572\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.salt_transport_factor-Tuple{Any, Any}","page":"Home","title":"AquaCrop.salt_transport_factor","text":"s = salt_transport_factor(theta, soil_layers)\n\nsimul.f90:4595\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.season_run!-Tuple{AquaCropField}","page":"Home","title":"AquaCrop.season_run!","text":"season_run!(cropfield::AquaCropField)\n\nUpdates the AquaCropField for all days in season 1\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.seasonal_sum_of_kcpot-NTuple{29, Any}","page":"Home","title":"AquaCrop.seasonal_sum_of_kcpot","text":"sumkcpot = seasonal_sum_of_kcpot(outputs, thedaystoccini, thegddaystoccini, l0, l12, \n                                 l123, l1234, gddl0, gddl12, gddl123, \n                                 gddl1234, cco, ccx, cgc, gddcgc, cdc, \n                                 gddcdc, kctop, kcdeclageing, \n                                 cceffectprocent, tbase, tupper, tdaymin, \n                                 tdaymax, gdtransplow, co2i, themodecycle,\n                                 simulation, simulparam)\n\nglobal.f90:5315 note that we must do simulation.DelayedDays = 0 before calling this function\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_clim_data!-Tuple{Any, AquaCrop.ProjectInputType}","page":"Home","title":"AquaCrop.set_clim_data!","text":"set_clim_data!(gvars, projectinput::ProjectInputType)\n\nglobal.f90:4295\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_clim_record!-Tuple{AquaCrop.RepClim}","page":"Home","title":"AquaCrop.set_clim_record!","text":"set_clim_record!(record::RepClim; kwargs...)\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_daynr_to_yundef-Tuple{Any}","page":"Home","title":"AquaCrop.set_daynr_to_yundef","text":"daynri = set_daynr_to_yundef(daynri)\n\ntempprocessing.f90:351\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_gdd_variables_nextday!-Tuple{Any}","page":"Home","title":"AquaCrop.set_gdd_variables_nextday!","text":"set_gdd_variables_nextday!(gvars)\n\nrun.f90:7376\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_perennial_period!-Tuple{AquaCrop.RepPerennialPeriod, AbstractString}","page":"Home","title":"AquaCrop.set_perennial_period!","text":"set_perennial_period!(perennial_period::RepPerennialPeriod, crop_type::AbstractString; aux::Union{AbstractDict, Nothing}=nothing)\n\nsets perennialperiod for a given croptype possible crop_type are  [\"maize\", \"wheat\", \"cotton\", \"alfalfaGDD\"]\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_soil!-Tuple{AquaCrop.RepSoil, AbstractString}","page":"Home","title":"AquaCrop.set_soil!","text":"set_soil!(soil::RepSoil, soil_type::AbstractString; aux::Union{AbstractDict, Nothing}=nothing)\n\nsets soil for a given soiltype possible soiltype are  [\"sandy clay\", \"clay\", \"clay loam\", \"loamy sand\", \"loam\", \"sand\", \"silt\", \"silty loam\", \"silty clay\"]\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.set_soillayers!-Tuple{Vector{AquaCrop.SoilLayerIndividual}, AbstractString}","page":"Home","title":"AquaCrop.set_soillayers!","text":"set_soillayers!(soil_layers::Vector{SoilLayerIndividual}, soil_type::AbstractString; aux::Union{AbstractDict, Nothing}=nothing)\n\nsets soillayers for a given soiltype possible soil_type are  [\"sandy clay\", \"clay\", \"clay loam\", \"loamy sand\", \"loam\", \"sand\", \"silt\", \"silty loam\", \"silty clay\"]\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.setparameter!-Union{Tuple{T1}, Tuple{T}, Tuple{AquaCrop.ParametersContainer{T}, Symbol, T1}} where {T, T1}","page":"Home","title":"AquaCrop.setparameter!","text":"setparameter!(parameterscontainer::ParametersContainer{T}, parameterkey::Symbol, parameter::T)\n\nsets an entry in parameterscontainer. \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.setup_cropfield!-Tuple{AquaCropField, AquaCrop.AllOk}","page":"Home","title":"AquaCrop.setup_cropfield!","text":"setup_cropfield!(cropfield::AquaCropField, all_ok::AllOk; kwargs...)\n\nsetups the cropfield variables, check if all_ok.logi == true\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.soil_evaporation_reduction_coefficient-Tuple{Any, Any}","page":"Home","title":"AquaCrop.soil_evaporation_reduction_coefficient","text":"s = soil_evaporation_reduction_coefficient(wrel, edecline)\n\nglobal.f90:2139\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.start_cropfield-Tuple{}","page":"Home","title":"AquaCrop.start_cropfield","text":"cropfield, all_ok = start_cropfield(; kwargs...)\n\nstarts the crop with the proper runtype, check if all_ok.logi == true \n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.start_outputs-Tuple{}","page":"Home","title":"AquaCrop.start_outputs","text":"outputs = start_outputs()\n\nvariable with the outputs of the program\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.start_the_program!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.start_the_program!","text":"outputs = start_the_program(parentdir::Union{String,Nothing}=nothing, runtype::Union{Symbol,Nothing}=nothing)\n\nstarts the program\n\nstartunit.f90:931\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.stress_biomass_relationship!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.stress_biomass_relationship!","text":"stress_biomass_relationship!(outputs, gvars)\n\ntempprocessing.f90:3067\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.sum_calendar_days-NTuple{7, Any}","page":"Home","title":"AquaCrop.sum_calendar_days","text":"nrcdays = sum_calendar_days(valgddays, firstdaycrop, tbase, tupper, tdaymin, tdaymax, gvars)\n\ntempprocessing.f90:1035\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.surface_transpiration!-NTuple{4, Any}","page":"Home","title":"AquaCrop.surface_transpiration!","text":"surface_transpiration!(gvars, coeffb0salt, coeffb1salt, coeffb2salt)\n\nsimul.f90:1523\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.swcz_soil-Tuple{Any}","page":"Home","title":"AquaCrop.swcz_soil","text":"swcact = swcz_soil(gvars)\n\nrun.f90:6555\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.tau_from_ksat-Tuple{Any}","page":"Home","title":"AquaCrop.tau_from_ksat","text":"tau = tau_from_ksat(ksat)\n\nglobal.f90:1889\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.temperature_file_covering_crop_period!-NTuple{4, Any}","page":"Home","title":"AquaCrop.temperature_file_covering_crop_period!","text":"temperature_file_covering_crop_period!(outputs, gvars, crop_firstday, crop_lastday)\n\ntempprocessing.f90:1789\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.time_root_function-NTuple{4, Any}","page":"Home","title":"AquaCrop.time_root_function","text":"trf = time_root_function(t, shapefactor, tmax, t0)\n\nglobal.f90:1263\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.time_to_cc_ini-NTuple{6, Any}","page":"Home","title":"AquaCrop.time_to_cc_ini","text":"elapsedtime = time_to_cc_ini(theplantingtype, thecropplantingdens, \n                      thesizeseedling, thesizeplant, thecropccx, thecropcgc)\n\nglobal.f90:1754\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.time_to_max_canopy_sf-NTuple{13, Any}","page":"Home","title":"AquaCrop.time_to_max_canopy_sf","text":"l12sf, redcgc, redccx, classsf = time_to_max_canopy_sf(cco, cgc, ccx, l0, l12, l123, ltoflor, lflor, determinantcrop, l12sf, redcgc, redccx, classsf)\n\nglobal.f90:2090\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.translate_inilayers_to_swprofile!-NTuple{5, Any}","page":"Home","title":"AquaCrop.translate_inilayers_to_swprofile!","text":"translate_inilayers_to_swprofile!(gvars, nrlay, laythickness, layvolpr, layecds)\n\nglobal.f90:6179\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.translate_inipoints_to_swprofile!-NTuple{5, Any}","page":"Home","title":"AquaCrop.translate_inipoints_to_swprofile!","text":"translate_inipoints_to_swprofile!(gvars, nrloc, locdepth, locvolpr, locecds)\n\nglobal.f90:6258\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.wc_evap_layer-NTuple{4, Any}","page":"Home","title":"AquaCrop.wc_evap_layer","text":"wx = wc_evap_layer(zlayer, attheta, compartments, soil_layers)\n\nsimul.f90:4158\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.write_daily_results!-NTuple{5, Any}","page":"Home","title":"AquaCrop.write_daily_results!","text":"write_daily_results!(outputs, gvars, dap, wpi, nrrun)\n\nrun.f90:7419\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.write_evaluation_data!-NTuple{4, Any}","page":"Home","title":"AquaCrop.write_evaluation_data!","text":"write_evaluation_data!(outputs, gvars, dap, nrrun)\n\nrun.f90:6498\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.write_intermediate_period!-Tuple{Any, Any}","page":"Home","title":"AquaCrop.write_intermediate_period!","text":"write_intermediate_period!(outputs, gvars)\n\nrun.f90:6088\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.write_sim_period!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.write_sim_period!","text":"write_sim_period!(outputs, gvars, nrrun)\n\nrun.f90:6064\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.write_the_results!-NTuple{29, Any}","page":"Home","title":"AquaCrop.write_the_results!","text":"write_the_results!(outputs, anumber, day1, month1, year1, dayn, monthn, \n                       yearn, rper, etoper, gddper, irriper, infiltper, \n                       roper, drainper, crwper, eper, exper, trper, trwper, \n                       trxper, salinper, saloutper, \n                       salcrper, biomassper, bunlimper, bmobper, bstoper, \n                       gvars)\n\nrun.f90:4582\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.write_title_part1_mult_results!-Tuple{Any, Any, Any}","page":"Home","title":"AquaCrop.write_title_part1_mult_results!","text":"write_title_part1_mult_results!(outputs, gvars, nrrun)\n\nrun.f90:4545\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.year_weighing_factor-Tuple{Any}","page":"Home","title":"AquaCrop.year_weighing_factor","text":"yeari = year_weighing_factor(cropfirstdaynr)\n\nsimul.f90:1073\n\n\n\n\n\n","category":"method"},{"location":"#AquaCrop.zr_adjusted_to_restrictive_layers-Tuple{Any, Vector{AquaCrop.SoilLayerIndividual}}","page":"Home","title":"AquaCrop.zr_adjusted_to_restrictive_layers","text":"zrout = zr_adjusted_to_restrictive_layers(zrin, soil_layers::Vector{SoilLayerIndividual})\n\nglobal.f90:1126\n\n\n\n\n\n","category":"method"}]
}
